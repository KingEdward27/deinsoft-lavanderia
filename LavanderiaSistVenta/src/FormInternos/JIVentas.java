/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package FormInternos;

import Adicional.AutoCompletion;
import Adicional.SystemOutToLog4j;
import Adicional.Ticket2;
import Adicional.Util;
import accesodatos.IngresosADN;
import accesodatos.ProductosADN;
import accesodatos.TiposServicioADN;
import accesodatos.VentasADN;
import accesodatos.ClientesADN;
import accesodatos.NumeracionDocumentoADN;
import accesodatos.ParametrosADN;
import accesodatos.TipoDocADN;
import entidades.Detalle_Venta;
import entidades.Formatos;
import entidades.ProductoDetalle;
import entidades.Productos;
import entidades.Tipos_Servicio;
import entidades.Ventas;
import entidades.Clientes;
import entidades.Ingresos;
import entidades.NumeracionDocumento;
import entidades.Parametros;
import facturacionelectronica.JDConfirmacion;
import java.sql.Date;
import java.text.ParseException;
import java.util.Calendar;
import java.util.LinkedList;
import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyEvent;
import java.beans.PropertyVetoException;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDesktopPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;

/**
 *
 * @author Crixuz
 */
public class JIVentas extends javax.swing.JInternalFrame {

    /**
     * Creates new form JIVentas
     */
    Clientes cliente = null;

    public JIVentas() {
        super();
        initComponents();
//        this.requestFocus();
//        jbtnAgregar.addActionListener((ActionListener) this);
//        jbtnAgregar.setFocusable(true);
//        jbtnAgregar.requestFocus();
        getRootPane().setDefaultButton(jbtnAgregar);

    }

    static {
        SystemOutToLog4j.enableForClass(JIVentas.class);
    }
//    Logger logger = LoggerFactory.getLogger(JIVentas.class);

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tbxnrodocumento = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbxServicios = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtObservaciones = new javax.swing.JTextArea();
        jbtnBCliente1 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        cbxServicios1 = new javax.swing.JComboBox();
        cbxClientes = new javax.swing.JComboBox();
        jdprFecVenta1 = new com.michaelbaranov.microba.calendar.DatePicker();
        jLabel11 = new javax.swing.JLabel();
        java.util.Date date = new java.util.Date();
        SpinnerDateModel sm = new SpinnerDateModel(date , null, null, Calendar.HOUR_OF_DAY);
        jSpinner1 = new javax.swing.JSpinner(sm);
        tbxnrodocumento1 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jbtnBCliente2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jtfdIGV = new javax.swing.JTextField();
        jtfdSubTotal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jbtnNuevo = new javax.swing.JButton();
        jbtnAgregar = new javax.swing.JButton();
        jbtnQuitar = new javax.swing.JButton();
        jbtnVender = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jlblTotal = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tbxserie = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbxtipodocumento = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jdprFecVenta = new com.michaelbaranov.microba.calendar.DatePicker();
        jlblEstado = new javax.swing.JLabel();
        tbxserie1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();

        setClosable(true);
        setMaximizable(true);
        setTitle("::::::>>>> Servicio de Lavandería <<<<::::::");
        setFocusCycleRoot(false);
        setFocusTraversalPolicyProvider(true);
        setVisible(true);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de Venta"));

        jLabel1.setText("Cliente:");

        tbxnrodocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbxnrodocumentoActionPerformed(evt);
            }
        });
        tbxnrodocumento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbxnrodocumentoKeyPressed(evt);
            }
        });

        jLabel3.setText("Nº Documento:");

        cbxServicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxServiciosActionPerformed(evt);
            }
        });

        jLabel5.setText("Tipo Servicio:");

        jLabel9.setText("Observaciones:");

        txtObservaciones.setColumns(20);
        txtObservaciones.setRows(5);
        txtObservaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtObservacionesKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(txtObservaciones);

        jbtnBCliente1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/agregar.png"))); // NOI18N
        jbtnBCliente1.setNextFocusableComponent(txtObservaciones);
        jbtnBCliente1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBCliente1ActionPerformed(evt);
            }
        });

        jLabel10.setText("Tipo Pago:");

        cbxServicios1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "POR PAGAR", "EFECTIVO" }));
        cbxServicios1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cbxServicios1.setNextFocusableComponent(cbxClientes);
        cbxServicios1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxServicios1ActionPerformed(evt);
            }
        });

        cbxClientes.setEditable(true);
        cbxClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxClientesActionPerformed(evt);
            }
        });

        jLabel11.setText("Fecha y hora de entrega:");

        JSpinner.DateEditor de = new JSpinner.DateEditor(jSpinner1, "HH:mm");
        jSpinner1.setEditor(de);

        tbxnrodocumento1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbxnrodocumento1ActionPerformed(evt);
            }
        });
        tbxnrodocumento1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbxnrodocumento1KeyPressed(evt);
            }
        });

        jLabel12.setText("Nº Documento:");

        jbtnBCliente2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/Print2.png"))); // NOI18N
        jbtnBCliente2.setNextFocusableComponent(txtObservaciones);
        jbtnBCliente2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBCliente2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cbxClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbtnBCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jdprFecVenta1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tbxnrodocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(cbxServicios, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(cbxServicios1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tbxnrodocumento1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnBCliente2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 151, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel9)
                                    .addGap(28, 28, 28))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel10))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(tbxnrodocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cbxServicios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cbxServicios1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tbxnrodocumento1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jbtnBCliente2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jbtnBCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jdprFecVenta1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(48, 48, 48))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdProducto", "Cantidad", "Descripcion del Producto", "Precio", "Importe", "idmarca", "idcolor", "idcarac"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(0);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
            jTable1.getColumnModel().getColumn(1).setMinWidth(100);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(3).setMinWidth(110);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(110);
            jTable1.getColumnModel().getColumn(3).setMaxWidth(110);
            jTable1.getColumnModel().getColumn(4).setMinWidth(110);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(110);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(110);
        }

        jtfdIGV.setEditable(false);

        jtfdSubTotal.setEditable(false);

        jLabel6.setText("IGV:");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jbtnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/ven2_result.png"))); // NOI18N
        jbtnNuevo.setMnemonic('n');
        jbtnNuevo.setText("Nuevo");
        jbtnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnNuevoActionPerformed(evt);
            }
        });

        jbtnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/ven3_result.png"))); // NOI18N
        jbtnAgregar.setText("Agregar");
        jbtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAgregarActionPerformed(evt);
            }
        });
        jbtnAgregar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnAgregarKeyPressed(evt);
            }
        });

        jbtnQuitar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/ven4_result.png"))); // NOI18N
        jbtnQuitar.setMnemonic('q');
        jbtnQuitar.setText("Quitar");
        jbtnQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnQuitarActionPerformed(evt);
            }
        });

        jbtnVender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/ven1_result.png"))); // NOI18N
        jbtnVender.setMnemonic('v');
        jbtnVender.setText("Vender");
        jbtnVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnVenderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnQuitar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtnVender)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnNuevo)
                    .addComponent(jbtnAgregar)
                    .addComponent(jbtnQuitar)
                    .addComponent(jbtnVender))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setText("SubTotal:");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Total de Venta", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 14))); // NOI18N

        jlblTotal.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        jlblTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblTotal.setText("S/. 0.00");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jlblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jLabel8.setText("Serie Ticket:");

        tbxserie.setEnabled(false);
        tbxserie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbxserieActionPerformed(evt);
            }
        });

        jLabel2.setText("Nota Atención:");

        cbxtipodocumento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ticket", "Boleta", "Factura" }));
        cbxtipodocumento.setEnabled(false);
        cbxtipodocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxtipodocumentoActionPerformed(evt);
            }
        });

        jLabel7.setText("Fecha Venta:");

        jdprFecVenta.setMaximumSize(new java.awt.Dimension(2147483647, 21));
        jdprFecVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jdprFecVentaActionPerformed(evt);
            }
        });

        jlblEstado.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jlblEstado.setForeground(new java.awt.Color(153, 0, 0));
        jlblEstado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblEstado.setText(" ");

        tbxserie1.setEnabled(false);
        tbxserie1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbxserie1ActionPerformed(evt);
            }
        });

        jLabel13.setText("Serie:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(29, 29, 29)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfdIGV)
                            .addComponent(jtfdSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tbxserie, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbxtipodocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tbxserie1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jdprFecVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jlblEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(tbxserie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)
                                .addComponent(cbxtipodocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7)
                                .addComponent(jdprFecVenta, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel13)
                                        .addComponent(tbxserie1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jlblEstado))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfdSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfdIGV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public static int idcli = 1, idpro = 0;
    public static boolean llamada = false, llamada_venta = false, apertura = false,
            estado = true, estadoventa = false, estado_cobro, is_open = true;
    public static float total = 0f, montopagado = 0f, recidido = 0, vuelto = 0, a_cuenta = 0, descuento = 0f, valorIGV = 0.18f;
    ;
    public static String nomcli = "", nompro = "", nuevo_cliente = "";
    LinkedList<Productos> Lista = new LinkedList<>();
    private float subtotal = 0, igv;
    public static ProductoDetalle ProX = new ProductoDetalle();
    private DefaultTableModel dtm = null;
    private void cbxtipodocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxtipodocumentoActionPerformed
        subtotal = 0;
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            float we = Float.parseFloat(dtm.getValueAt(i, 4).toString());
            subtotal += we;
        }
        VerTotales();
    }//GEN-LAST:event_cbxtipodocumentoActionPerformed

    private void jbtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAgregarActionPerformed
        ProX = new ProductoDetalle();
        llamada = true;
        VerDocumento();
//        VerTotales();
        JDBuscarProductos v = new JDBuscarProductos(null, closable);
        v.setLocationRelativeTo(this);
        v.setVisible(true);

        if (ProX.getIdProducto() > 0) {
            int nro = jTable1.getRowCount();
            int aux = 0;
            String aux2 = "";
            float impA = 0f, preA = 0f, canA = 0f;
//            JOptionPane.showMessageDialog(rootPane, "waaaa");
            boolean estado = false;
            for (int f = 0; f < nro; f++) {
                aux = Integer.parseInt(dtm.getValueAt(f, 0).toString());
                aux2 = dtm.getValueAt(f, 1).toString();
                if (aux2.equals(ProX.getDescripcion())) {
                    //if (aux == ProX.getIdProducto()) {
                    estado = true;
                    preA = Float.parseFloat(dtm.getValueAt(f, 3).toString());
                    canA = Float.parseFloat(dtm.getValueAt(f, 1).toString());
                    impA = Float.parseFloat(dtm.getValueAt(f, 4).toString());
                    canA += ProX.getCantidad();
//                    try {
//                        if (canA > ProductosADN.CapturaStock(ProX)) {
//                            canA = ProductosADN.CapturaStock(ProX);
//                            JOptionPane.showMessageDialog(rootPane, "Cantidad a vender supera el stock del producto");
//                        }
//                    } catch (Exception e) {
//                        JOptionPane.showMessageDialog(rootPane, "Error en capturar el stock" + e.toString());
//                    }

                    ProX.setImporte(preA * canA);
                    total -= impA;
                    total += ProX.getImporte();
                    dtm.setValueAt(String.valueOf(canA), f, 1);
                    dtm.setValueAt(String.valueOf(ProX.getImporte()), f, 4);
//                    jbtnAgregar.requestFocus();
                    break;
                }
            }
            if (estado == false) {
                dtm.addRow(ProX.DatosToArray());
                total += ProX.getImporte();
            }
            VerTotales();
//            tbxnrodocumento.requestFocus();
        }
        llamada = false;
    }//GEN-LAST:event_jbtnAgregarActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
//        tbxnrodocumento.requestFocus();
        try {
//            txtObservaciones.setVisible(false);
//            Habilitar(false);
            dtm = (DefaultTableModel) jTable1.getModel();
            if (IngresosADN.EvaluarApertura(Hoy()) == false) {
                JOptionPane.showMessageDialog(rootPane, "Debe aperturar caja para realizar ventas");
                JDAperturaCaja a = new JDAperturaCaja(null, closable);
                a.setLocationRelativeTo(this);
                a.setVisible(true);
                if (apertura == false) {
                    dispose();
                }
            }
            jbtnNuevoActionPerformed(null);
            if (is_open) {
                CargarClientes();
//                CargarTipoDocs();
                AutoCompletion.enable(cbxClientes);
                is_open = false;
            }

            try {
                cbxServicios.removeAllItems();
                Tipos_Servicio ts = new Tipos_Servicio();
                ts.setDescripcion("");
                ts.setEstado("1");
                for (Tipos_Servicio ts2 : TiposServicioADN.Lista(ts)) {
                    cbxServicios.addItem(ts2.getDescripcion());
                }

            } catch (SQLException ex) {
                System.out.println("");
            } catch (ClassNotFoundException ex) {
                System.out.println("ex: " + ex.toString());
            }
        } catch (Exception ex) {
            ex.printStackTrace(System.out);
            System.out.println("ex: " + ex.toString());
            JOptionPane.showMessageDialog(rootPane, ex.toString());

        }
        try {
            try {
                jdprFecVenta1.setDate(sumarRestarDiasFecha(jdprFecVenta.getDate(), 2));
            } catch (PropertyVetoException ex) {
                System.out.println("ex: " + ex.toString());
            }
        } catch (ParseException ex) {
            System.out.println("ex: " + ex.toString());
        }
        Util.OcultarColumnaJtable(jTable1, 5);
        Util.OcultarColumnaJtable(jTable1, 6);
        Util.OcultarColumnaJtable(jTable1, 7);
    }//GEN-LAST:event_formInternalFrameActivated

    private void jbtnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnNuevoActionPerformed
        try {
            if (jbtnNuevo.getText().equals("Nuevo")) {
                jbtnNuevo.setText("Cancelar");
//            Habilitar(true);
                jbtnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/cancelar1.png")));
            } else {
                jbtnNuevo.setText("Nuevo");

                jbtnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/ven2_result.png")));
            }
            Limpiar();
            VerDocumento();
            total = 0;
            subtotal = 0;
            VerTotales();
            idcli = 1;
            descuento = 0;
            a_cuenta = 0;
            recidido = 0;
            vuelto = 0;
            tbxnrodocumento.grabFocus();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }

    }//GEN-LAST:event_jbtnNuevoActionPerformed

    private void jbtnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnQuitarActionPerformed
        try {
            int f = jTable1.getSelectedRow();
            if (f >= 0) {
                Productos p = new Productos();
                p.setIdProducto(Integer.parseInt(dtm.getValueAt(f, 0).toString()));
                p.setStock(Float.parseFloat(dtm.getValueAt(f, 1).toString()));
                ProductosADN.AñadirStock(p);
                float impA = Float.parseFloat(dtm.getValueAt(f, 4).toString());
                System.out.println("impA: " + impA);
                total -= impA;
                VerTotales();
                dtm.removeRow(f);
            }
        } catch (Exception exception) {
            JOptionPane.showMessageDialog(rootPane, "Error inesperado");
        }
    }//GEN-LAST:event_jbtnQuitarActionPerformed

    private void jbtnVenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnVenderActionPerformed
        try {
            if (jTable1.getRowCount() > 0) {
                List<Parametros> datosEmpresa = ParametrosADN.Lista();
                estado_cobro = false;
                total = Float.parseFloat(jlblTotal.getText().substring(4, jlblTotal.getText().length()));
                if (cbxServicios1.getSelectedIndex() == 0) {
                    llamada_venta = true;
                    JDCobrar co = new JDCobrar(null, closable);
                    co.setLocationRelativeTo(this);
                    co.setVisible(true);
                    llamada_venta = false;
                } else {

                    estado_cobro = true;
                }

                if (estado_cobro) {
                    if (jTable1.getRowCount() > 0) {

                        if (VentasADN.ExisteNro(tbxnrodocumento.getText().trim())) {
                            JOptionPane.showMessageDialog(rootPane, ":.  El número de documento ingresado ya existe .:");
                            return;
                        }
//                        TipoDoc td = TipoDocADN.getByName(cbxtipodocumentoE.getSelectedItem().toString());

//                        if (cbxServicios1.getSelectedIndex() == 0 || cbxServicios1.getSelectedIndex() == 2 || cbxServicios1.getSelectedIndex() == 3) {
//                            if(td.getValue().equals("01") && (this.cliente.getDni().isEmpty() || this.cliente.getDni().length() != 11)){
//                                JOptionPane.showMessageDialog(rootPane, "El cliente no tiene RUC para generar documento electrónico");
//                                return;
//                            }
//                            if(td.getValue().equals("03") && (this.cliente.getDni().isEmpty() || this.cliente.getDni().length() != 8)){
//                                JOptionPane.showMessageDialog(rootPane, "El cliente no tiene DNI para generar documento electrónico");
//                                return;
//                            }
//                        }
//                        hora = hor + ":" + minutos + ":" + segundos;
                        Ventas aux = new Ventas();
                        aux.setIdventa(0);
                        Clientes c = new Clientes();
                        c.setNombres(cbxClientes.getSelectedItem().toString());
                        aux.setIdcliente(ClientesADN.CapturaIDCliente(c));
//                        aux.setTipoDoc(null);
                        aux.setSerie(tbxserie.getText().trim());
                        aux.setNro(tbxnrodocumento.getText().trim());
//                        aux.setSerieDocE(tbxserie1.getText().trim());
                        String fecha = Formatos.sdfFecha.format(jdprFecVenta.getDate());
                        String fecha2 = Formatos.sdfFecha.format(jdprFecVenta1.getDate());
                        java.util.Date hora = (java.util.Date) jSpinner1.getValue();
                        Date fechasql = Formatos.FechaSQL(fecha);

                        aux.setFecha(fechasql);
                        aux.setTotal(Float.parseFloat(jlblTotal.getText().substring(4, jlblTotal.getText().length())));

                        aux.setIgv(Float.parseFloat(jtfdIGV.getText()));
                        aux.setEstado("p");
                        aux.setIdusuario(1);

                        aux.setHora(Util.sdfHora.format(hora));
                        aux.setSubtotal(Float.parseFloat(jtfdSubTotal.getText()));
                        aux.setTipo_pago(cbxServicios1.getSelectedItem().toString());
                        aux.setIdtiposervicio(TiposServicioADN.CapturarId(cbxServicios.getSelectedItem().toString()));
                        aux.setStrfecha_Entrega(fecha2 + " " + Util.sdfHora.format(hora));
                        aux.setA_cuenta(a_cuenta);
                        aux.setDescuento(descuento);
                        LinkedList<Detalle_Venta> dv = new LinkedList<>();
                        Detalle_Venta d = null;
                        int nr = jTable1.getRowCount();
                        for (int f = 0; f < nr; f++) {
                            d = new Detalle_Venta();
                            d.setIdProducto(Integer.parseInt(dtm.getValueAt(f, 0).toString()));
                            d.setCantidad(Float.parseFloat(dtm.getValueAt(f, 1).toString()));
                            d.setPrecio(Float.parseFloat(dtm.getValueAt(f, 3).toString()));
                            d.setImporte(Float.parseFloat(dtm.getValueAt(f, 4).toString()));
                            d.setDescripcion_producto(dtm.getValueAt(f, 2).toString());

                            d.setIdmarca(Integer.parseInt(dtm.getValueAt(f, 5).toString()));
                            d.setIdcolor(Integer.parseInt(dtm.getValueAt(f, 6).toString()));
                            d.setAfectacionIgv(d.getImporte() - (d.getImporte() / (1 + valorIGV)));
                            d.setIdcaracteristica(Integer.parseInt(dtm.getValueAt(f, 7).toString()));
                            dv.add(d);
                        }
                        aux.setLista(dv);
                        System.out.println("venta: " + aux.toString());
                        int idVenta = VentasADN.Guardar(aux);
                        
                        if (idVenta > 0) {
                            
                            JOptionPane.showMessageDialog(rootPane, ":. Venta Efectuada .:");
                            try {
                                jlblEstado.setText("Imprimiendo ticket...");
                                JDConfirmacion dialog = new JDConfirmacion(null, closable, idVenta, true,ParametrosADN.Lista().get(0).getNombreImpresora(),"v",idVenta,"0");
                                dialog.setLocationRelativeTo(this);
                                dialog.setVisible(true);
                            } catch (Exception ex) {
                                System.out.println(Util.exceptionToString(ex));
                                ex.printStackTrace(System.out);
                            }
                            JIListaVentasPendientes f1 = new JIListaVentasPendientes(tbxnrodocumento.getText().trim());
                            JDesktopPane desktopPane = getDesktopPane();
                            desktopPane.add(f1);//add f1 to desktop pane
                            
                            f1.setLocation((desktopPane.getSize().width - f1.getSize().width)/2,
                                            (desktopPane.getSize().height- f1.getSize().height)/2);
                            f1.setVisible(true);// set the f1 frame visible
                            jbtnNuevoActionPerformed(evt);
                            jbtnNuevoActionPerformed(evt);
                            jlblEstado.setText("");
                        }
                    }
                }
            }

            if (estadoventa == false) {
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    Productos p = new Productos();
                    p.setIdProducto(Integer.parseInt(dtm.getValueAt(i, 0).toString()));
                    p.setStock(Float.parseFloat(dtm.getValueAt(i, 1).toString()));
                    ProductosADN.AñadirStock(p);

                }

            }

        } catch (Exception ex) {
            System.out.println(Util.exceptionToString(ex));
            JOptionPane.showMessageDialog(rootPane, ex.toString());
        }
    }//GEN-LAST:event_jbtnVenderActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
    }//GEN-LAST:event_formFocusGained

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
    }//GEN-LAST:event_formKeyPressed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened

        //        jbtnAgregar.setFocusable(true);
//        jbtnAgregar.requestFocus();
//        tbxnrodocumento.requestFocus();
//        jTextField1.requestFocus();
        Util.OcultarColumnaJtable(jTable1, 5);
        Util.OcultarColumnaJtable(jTable1, 6);
        Util.OcultarColumnaJtable(jTable1, 7);
//        Calendar calendario = new GregorianCalendar();
//        String hora = "";
//        int hor = calendario.get(Calendar.HOUR_OF_DAY);
//        int minutos = calendario.get(Calendar.MINUTE);
//        int segundos = calendario.get(Calendar.SECOND);
//        jSpinner1.setValue(hor + ":" + minutos);


    }//GEN-LAST:event_formInternalFrameOpened

    private void jbtnAgregarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnAgregarKeyPressed
    }//GEN-LAST:event_jbtnAgregarKeyPressed

    private void tbxnrodocumentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbxnrodocumentoKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_SPACE) {
            jbtnAgregarActionPerformed(null);
        }
        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
            jbtnVenderActionPerformed(null);
        }
    }//GEN-LAST:event_tbxnrodocumentoKeyPressed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        try {
            if (estadoventa == false) {
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    Productos p = new Productos();
                    p.setIdProducto(Integer.parseInt(dtm.getValueAt(i, 0).toString()));
                    p.setStock(Float.parseFloat(dtm.getValueAt(i, 1).toString()));
                    ProductosADN.AñadirStock(p);

                }

            }
        } catch (Exception e) {
            System.out.println(Util.exceptionToString(e));
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
        is_open = true;
    }//GEN-LAST:event_formInternalFrameClosing

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
    }//GEN-LAST:event_formKeyReleased

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
    }//GEN-LAST:event_formKeyTyped

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

        Util.ModificarTamañoJtable(jTable1, 0, 280);
    }//GEN-LAST:event_formComponentShown

    private void tbxnrodocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbxnrodocumentoActionPerformed
    }//GEN-LAST:event_tbxnrodocumentoActionPerformed

    private void cbxServiciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxServiciosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxServiciosActionPerformed

    private void jbtnBCliente1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBCliente1ActionPerformed
        JDAgregarClientes v = new JDAgregarClientes(null, closable);
        v.setLocationRelativeTo(this);
        v.setVisible(true);
        if (!nuevo_cliente.equals("")) {
            try {
                CargarClientes();
                cbxClientes.setSelectedItem(nuevo_cliente);
                cbxClientes.requestFocus();
            } catch (SQLException ex) {
                System.out.println("ex: " + ex.toString());
            }
        }
    }//GEN-LAST:event_jbtnBCliente1ActionPerformed

    private void cbxServicios1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxServicios1ActionPerformed
//        if (cbxServicios1.getSelectedIndex() == 0 || cbxServicios1.getSelectedIndex() == 2 || cbxServicios1.getSelectedIndex() == 3) {
//            cbxtipodocumentoE.setEnabled(true);
//            int id;
//            try {
//                if (cbxtipodocumentoE.getItemCount() > 0) {
//                    id = TipoDocADN.getId(cbxtipodocumentoE.getSelectedItem().toString());
//                    NumeracionDocumento n = NumeracionDocumentoADN.getByTipoddocId(id);
//                    tbxserie1.setText(n.getSerie());
//                    jlblTotal1.setText(n.getSerie() + "-" + String.format("%08d", n.getUltimoNumero() + 1));
//                    if (this.cliente != null) {
//                        if (cbxtipodocumentoE.getSelectedIndex() != 0 && this.cliente.getDni().isEmpty()) {
//                            JOptionPane.showMessageDialog(rootPane, "El cliente no tiene dni para generar documento electrónico");
//                        }
//                    }
//                }
//
//            } catch (ClassNotFoundException ex) {
//               System.out.println("ex: "+ex.toString());
//            } catch (SQLException ex) {
//               System.out.println("ex: "+ex.toString());
//            }
//        } else {
//            jlblTotal1.setText(" ");
//            cbxtipodocumentoE.setEnabled(false);
//        }
    }//GEN-LAST:event_cbxServicios1ActionPerformed

    private void cbxClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxClientesActionPerformed
//        try {
//            this.cliente = ClientesADN.getByName(cbxClientes.getSelectedItem().toString());
//            if ((cbxServicios1.getSelectedIndex() == 0 || cbxServicios1.getSelectedIndex() == 2 || cbxServicios1.getSelectedIndex() == 3)
//                    && !cbxtipodocumentoE.getSelectedItem().toString().equals("NOTA DE VENTA") && this.cliente.getDni().isEmpty()) {
////                JOptionPane.showMessageDialog(rootPane, "El cliente no tiene dni para generar documento electrónico");
//                jLabel1.setText("Cliente (SIN DNI O RUC!):");
//            }else{
//                jLabel1.setText("Cliente: ");
//            }
//        } catch (SQLException ex) {
//           System.out.println("ex: "+ex.toString());
//        } catch (ClassNotFoundException ex) {
//            System.out.println("ex: "+ex.toString());
//        }

    }//GEN-LAST:event_cbxClientesActionPerformed

    private void txtObservacionesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtObservacionesKeyPressed
        if (evt.getKeyChar() == KeyEvent.VK_TAB) {
            evt.consume();
            jbtnAgregarActionPerformed(null);
        }
//        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
//            jbtnVenderActionPerformed(null);
//        }
    }//GEN-LAST:event_txtObservacionesKeyPressed

    private void jdprFecVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jdprFecVentaActionPerformed
        try {
            try {
                jdprFecVenta1.setDate(sumarRestarDiasFecha(jdprFecVenta.getDate(), 2));
            } catch (PropertyVetoException ex) {
                System.out.println("ex: " + ex.toString());
            }
        } catch (ParseException ex) {
            System.out.println("ex: " + ex.toString());
        }

    }//GEN-LAST:event_jdprFecVentaActionPerformed

    private void tbxnrodocumento1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbxnrodocumento1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbxnrodocumento1ActionPerformed

    private void tbxnrodocumento1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbxnrodocumento1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbxnrodocumento1KeyPressed

    private void jbtnBCliente2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBCliente2ActionPerformed
        Ticket2 p = new Ticket2();
        p.setDispositivo("LPT1");
        p.escribir((char) 27 + "m");
        p.setTipoCaracterLatino();
        p.setFormato(56);
        p.escribir("  " + tbxnrodocumento1.getText());
        p.correr(10);
        p.cortar();
        p.cerrarDispositivo();
    }//GEN-LAST:event_jbtnBCliente2ActionPerformed

    private void tbxserieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbxserieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbxserieActionPerformed

    private void tbxserie1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbxserie1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbxserie1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbxClientes;
    private javax.swing.JComboBox cbxServicios;
    private javax.swing.JComboBox cbxServicios1;
    private javax.swing.JComboBox cbxtipodocumento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbtnAgregar;
    private javax.swing.JButton jbtnBCliente1;
    private javax.swing.JButton jbtnBCliente2;
    private javax.swing.JButton jbtnNuevo;
    private javax.swing.JButton jbtnQuitar;
    private javax.swing.JButton jbtnVender;
    private com.michaelbaranov.microba.calendar.DatePicker jdprFecVenta;
    private com.michaelbaranov.microba.calendar.DatePicker jdprFecVenta1;
    private javax.swing.JLabel jlblEstado;
    private javax.swing.JLabel jlblTotal;
    private javax.swing.JTextField jtfdIGV;
    private javax.swing.JTextField jtfdSubTotal;
    private javax.swing.JTextField tbxnrodocumento;
    private javax.swing.JTextField tbxnrodocumento1;
    private javax.swing.JTextField tbxserie;
    private javax.swing.JTextField tbxserie1;
    private javax.swing.JTextArea txtObservaciones;
    // End of variables declaration//GEN-END:variables
    // Suma los días recibidos a la fecha  

    public Date sumarRestarDiasFecha(java.util.Date fecha, int dias) throws ParseException {
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(fecha); // Configuramos la fecha que se recibe
        calendar.add(Calendar.DAY_OF_YEAR, dias);  // numero de días a añadir, o restar en caso de días<0
        return Formatos.FechaSQL(Formatos.sdfFecha.format(calendar.getTime())); // Devuelve el objeto Date con los nuevos días añadidos
    }

    static Date Hoy() throws ParseException {
        String fecha1 = Formatos.sdfFecha.format(new java.util.Date());
        Date fechasql = Formatos.FechaSQL(fecha1);
        return fechasql;
    }

    private void CargarClientes() throws SQLException {
        cbxClientes.removeAllItems();

        Clientes ts = new Clientes();
        ts.setDni("");
        ts.setNombres("");
        ts.setEstado("1");
        try {
//            System.out.println("wtf");
            int index = -1;
            List<Clientes> list = ClientesADN.Lista(ts);
            for (Clientes ts2 : list) {
                cbxClientes.addItem(ts2.getNombres());

//                System.out.println("waaa");
            }
            for (Clientes ts2 : list) {
                index++;
                if (ts2.getIdCliente() == 1) {
                    break;
                }
//                System.out.println("waaa");
            }
            cbxClientes.setSelectedIndex(index);
        } catch (ClassNotFoundException ex) {
            System.out.println("ex: " + ex.toString());
        }

    }

//    private void CargarTipoDocs() throws SQLException {
//        cbxtipodocumentoE.removeAllItems();
//
//        TipoDoc ts = new TipoDoc();
//        ts.setNombre("");
//        ts.setEstado("1");
//        try {
//            for (TipoDoc ts2 : TipoDocADN.Lista(ts)) {
//                cbxtipodocumentoE.addItem(ts2.getNombre());
//            }
//
//        } catch (ClassNotFoundException ex) {
//            System.out.println("ex: "+ex.toString());
//            
//        }
//
//    }
    private void Habilitar(boolean cs) {
        jbtnAgregar.setEnabled(cs);
        jbtnQuitar.setEnabled(cs);
        jbtnVender.setEnabled(cs);
        cbxtipodocumento.setEnabled(cs);
    }

    private void VerDocumento() {
        String doc = cbxtipodocumento.getSelectedItem().toString().trim();
        String GenerarNro = VentasADN.GeneraNro(doc);
        System.out.println("GenerarNro: " + GenerarNro);
        String GenerarSerie = VentasADN.GenerarSerie(doc);
        tbxserie.setText("0001");
        tbxnrodocumento.setText(GenerarNro);
    }

    private void Limpiar() throws SQLException, ClassNotFoundException {
//        tbxcliente.setText("");
        idcli = 0;
        tbxserie.setText("");
        tbxnrodocumento.setText("");
        int nr = jTable1.getRowCount();
        if (estadoventa == false) {
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                Productos p = new Productos();
                p.setIdProducto(Integer.parseInt(dtm.getValueAt(i, 0).toString()));
                p.setStock(Float.parseFloat(dtm.getValueAt(i, 1).toString()));
                ProductosADN.AñadirStock(p);

            }

        }
        for (int i = 0; i < nr; i++) {
            dtm.removeRow(0);
        }
    }

    private void VerTotales() {
        String doc = cbxtipodocumento.getSelectedItem().toString();
//        float tot=0;
//        float igv = 0; 
//        
//        if (doc.equals("Factura")) {
//            igv = subtotal * 0.19f;
//            subtotal -=igv;
//            tot = subtotal + igv;
//        }
//        if (doc.equals("Boleta")) {
//            tot =subtotal+igv;
//        }

//        if (doc.equals("Factura")) {
        igv = 0;
//        total = 0;
//            igv = subtotal * 0.19f;
        subtotal = total / (1f + valorIGV);
//            subtotal = subtotal - igv;
        igv = total - subtotal;
//        total = subtotal + igv;
        jtfdSubTotal.setText(Formatos.df.format(subtotal));
        jtfdIGV.setText(Formatos.df.format(igv));
        jlblTotal.setText("S/. " + Formatos.df.format(total));
//        } else {
//            tot = subtotal;
//            jtfdSubTotal.setText(Formatos.df.format(0.00));
//            subtotal = tot;
//            jtfdIGV.setText(Formatos.df.format(0.00));
//            jlblTotal.setText("S/. " + Formatos.df.format(tot));
////            tot=subtotal+igv;
//        }

    }
}

class Ticket {

    private String contentTicket = "    {{nameLocal}}\n"
            + "    {{direccion}}\n"
            + "    =========================================\n"
            + "    Ticket # {{ticket}}\n"
            + "    Cliente: {{cliente}}\n"
            + "    LE ATENDIO: {{cajero}}\n"
            + "    Fecha de venta: {{dateTime}}\n"
            + "    Cant.  Descripcion              Importe\n"
            + "    =========================================\n"
            + "    {{items}}\n"
            + "    =========================================\n"
            + "    SUBTOTAL: {{subTotal}}\n"
            + "    Descuento: {{descuento}} \n"
            + "    IGV: {{tax}}      |     RECIBIDO: {{recibo}}\n"
            + "    TOTAL: {{total}}     |    CAMBIO: {{change}}\n"
            + "    A cuenta: {{a_cuenta}} \n"
            + "    =========================================\n"
            + "    Fecha y hora actual: {{dateTime2}}\n"
            + "    Fecha y hora recojo: {{dateTime3}}\n"
            + "                ******::::::::*******"
            + "\n           "
            + "\n           "
            + "    NOTA: Una vez retirada la prenda no hay lugar a reclamo. \n"
            + "    Pasado 30 días de no retirar su ropa esta será rematada \n"
            + "    para recuperar los gastos del servicio dado.\n"
            + "    Prendas gastadas que no soporten el lavado serán\n"
            + "    resopnsabilidad del cliente. En este caso la lavendería\n"
            + "    no se responsabiliza\n"
            + "\n           "
            + "\n           "
            + "\n           "
            + "\n           "
            + "\n           "
            + "\n           "
            + "\n           "
            + "\n           "
            + "\n           "
            + "{{cortamos}}";
    //El constructor que setea los valores a la instancia

    Ticket(String nameLocal, String direccion, String expedition, String ticket,
            String caissier, String dateTime, String dateTime2, String dateTime3,
            String items, String subTotal, String tax, String total, String recibo,
            String change, String a_cuenta, String descuento, String cliente) {
        this.contentTicket = this.contentTicket.replace("{{nameLocal}}", nameLocal);
        this.contentTicket = this.contentTicket.replace("{{direccion}}", direccion);
        this.contentTicket = this.contentTicket.replace("{{expedition}}", expedition);
        this.contentTicket = this.contentTicket.replace("{{ticket}}", ticket);
        this.contentTicket = this.contentTicket.replace("{{cajero}}", caissier);
        this.contentTicket = this.contentTicket.replace("{{dateTime}}", dateTime);
        this.contentTicket = this.contentTicket.replace("{{dateTime2}}", dateTime2);
        this.contentTicket = this.contentTicket.replace("{{dateTime3}}", dateTime3);
        this.contentTicket = this.contentTicket.replace("{{items}}", items);
        this.contentTicket = this.contentTicket.replace("{{subTotal}}", subTotal);
        this.contentTicket = this.contentTicket.replace("{{tax}}", tax);
        this.contentTicket = this.contentTicket.replace("{{total}}", total);
        this.contentTicket = this.contentTicket.replace("{{recibo}}", recibo);
        this.contentTicket = this.contentTicket.replace("{{change}}", change);
        this.contentTicket = this.contentTicket.replace("{{a_cuenta}}", a_cuenta);
        this.contentTicket = this.contentTicket.replace("{{descuento}}", descuento);
        this.contentTicket = this.contentTicket.replace("{{cliente}}", cliente);
        char[] ESC_CUT_PAPER = new char[]{0x1B, 'm'};
        this.contentTicket = this.contentTicket.replace("{{cortamos}}", ESC_CUT_PAPER.toString());
    }

    public void Imprimir() {
        //Especificamos el tipo de dato a imprimir
        //Tipo: bytes; Subtipo: autodetectado
        DocFlavor flavor = DocFlavor.BYTE_ARRAY.AUTOSENSE;
        JOptionPane.showMessageDialog(null, contentTicket);
        //Aca obtenemos el servicio de impresion por defatul
        //Si no quieres ver el dialogo de seleccionar impresora usa esto
        //PrintService defaultService = PrintServiceLookup.lookupDefaultPrintService();

        //Con esto mostramos el dialogo para seleccionar impresora
        //Si quieres ver el dialogo de seleccionar impresora usalo
        //Solo mostrara las impresoras que soporte arreglo de bits
        PrintRequestAttributeSet pras = new HashPrintRequestAttributeSet();
        PrintService printService[] = PrintServiceLookup.lookupPrintServices(flavor, pras);
        PrintService defaultService = PrintServiceLookup.lookupDefaultPrintService();
//        PrintService service = ServiceUI.printDialog(null, 700, 200, printService, defaultService, flavor, pras);

        //Creamos un arreglo de tipo byte
        byte[] bytes;

        //Aca convertimos el string(cuerpo del ticket) a bytes tal como
        //lo maneja la impresora(mas bien ticketera :p)
        bytes = this.contentTicket.getBytes();

        //Creamos un documento a imprimir, a el se le appendeara
        //el arreglo de bytes
        Doc doc = new SimpleDoc(bytes, flavor, null);

        //Creamos un trabajo de impresión
        DocPrintJob job = defaultService.createPrintJob();

        //Imprimimos dentro de un try de a huevo
        try {
            //El metodo print imprime
            job.print(doc, null);
        } catch (Exception er) {
            JOptionPane.showMessageDialog(null, "Error al imprimir: " + er.getMessage());
        }
    }
}
