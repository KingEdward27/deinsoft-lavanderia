/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package FormInternos;

import static FormInternos.JDBuscarProductos.estado;
import accesodatos.IngresosADN;
import accesodatos.ProductosADN;
import accesodatos.TipoDocADN;
import accesodatos.VentasADN;
import entidades.Detalle_Venta;
import entidades.Formatos;
import entidades.Marcas;
import entidades.ProductoDetalle;
import entidades.Productos;
import entidades.TipoDoc;
import entidades.Ventas;
import java.awt.Color;
import java.sql.Date;
import java.text.ParseException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.LinkedList;
import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.ServiceUI;
import javax.print.SimpleDoc;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyEvent;
import java.awt.KeyboardFocusManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author EDWARD
 */
public class JIVentas2 extends javax.swing.JInternalFrame {

    /**
     * Creates new form JIVentas2
     */
    public JIVentas2() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jbtnBCliente = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cbxtipodocumento = new javax.swing.JComboBox();
        tbxnrodocumento = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tbxserie = new javax.swing.JTextField();
        jdprFecVenta = new com.michaelbaranov.microba.calendar.DatePicker();
        jtfdCliente = new org.swing.componet.JTextBoxHintDS();
        jtfdcodbarra = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jlblTotal = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jbtnNuevo = new javax.swing.JButton();
        jbtnAgregar = new javax.swing.JButton();
        jbtnQuitar = new javax.swing.JButton();
        jbtnVender = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jtfdIGV = new javax.swing.JTextField();
        jtfdSubTotal = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setClosable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de Venta"));

        jLabel1.setText("Cliente:");

        jbtnBCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/Find.png"))); // NOI18N
        jbtnBCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBClienteActionPerformed(evt);
            }
        });

        jLabel2.setText("Tipo Documiento:");

        cbxtipodocumento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ticket", "Boleta", "Factura" }));
        cbxtipodocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxtipodocumentoActionPerformed(evt);
            }
        });

        tbxnrodocumento.setEnabled(false);
        tbxnrodocumento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbxnrodocumentoKeyPressed(evt);
            }
        });

        jLabel3.setText("NÂº Documento:");

        jLabel7.setText("Fecha Venta:");

        jLabel8.setText("SerieDoc:");

        tbxserie.setEnabled(false);

        jtfdCliente.setEditable(false);
        jtfdCliente.setText("PUBLICO EN GENERAL");
        jtfdCliente.setTipoTextBox(null);
        jtfdCliente.setTiponumero(null);

        jtfdcodbarra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfdcodbarraActionPerformed(evt);
            }
        });
        jtfdcodbarra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfdcodbarraKeyPressed(evt);
            }
        });

        jLabel5.setText("Cod barra:");
        jLabel5.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jtfdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtnBCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jtfdcodbarra, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxtipodocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tbxserie, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tbxnrodocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jdprFecVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jbtnBCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(jtfdCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfdcodbarra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbxtipodocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tbxserie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tbxnrodocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jdprFecVenta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdProducto", "Cantidad", "Descripcion del Producto", "Precio", "Importe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(220);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Total de Venta", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 14))); // NOI18N

        jlblTotal.setFont(new java.awt.Font("Cambria Math", 1, 36)); // NOI18N
        jlblTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlblTotal.setText("S/. 0.00");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlblTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addGap(13, 13, 13))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jlblTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jbtnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/ven2_result.png"))); // NOI18N
        jbtnNuevo.setMnemonic('n');
        jbtnNuevo.setText("Nuevo");
        jbtnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnNuevoActionPerformed(evt);
            }
        });

        jbtnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/ven3_result.png"))); // NOI18N
        jbtnAgregar.setText("Agregar");
        jbtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAgregarActionPerformed(evt);
            }
        });
        jbtnAgregar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnAgregarKeyPressed(evt);
            }
        });

        jbtnQuitar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/ven4_result.png"))); // NOI18N
        jbtnQuitar.setMnemonic('q');
        jbtnQuitar.setText("Quitar");
        jbtnQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnQuitarActionPerformed(evt);
            }
        });

        jbtnVender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/ven1_result.png"))); // NOI18N
        jbtnVender.setMnemonic('v');
        jbtnVender.setText("Vender");
        jbtnVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnVenderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbtnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtnQuitar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtnVender)
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnNuevo)
                    .addComponent(jbtnAgregar)
                    .addComponent(jbtnQuitar)
                    .addComponent(jbtnVender))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setText("IGV:");

        jtfdIGV.setEditable(false);

        jtfdSubTotal.setEditable(false);

        jLabel4.setText("SubTotal:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(29, 29, 29)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfdIGV)
                            .addComponent(jtfdSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfdSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfdIGV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public static int idcli = 1, idpro = 0;
    public static boolean llamada = false, apertura = false, estado = true, estadoventa = false, estadocantidad = false;
    public static float total = 0f, montopagado = 0f, recidido = 0, vuelto = 0, cantidad = 0f;
    public static String nomcli = "", nompro = "", codbarra = "";
    LinkedList<Productos> Lista = new LinkedList<>();
    private float subtotal = 0, igv;
    public static ProductoDetalle ProX = new ProductoDetalle();
    private DefaultTableModel dtm = null;
    private void jbtnBClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBClienteActionPerformed
        JDBuscarClientes v = new JDBuscarClientes(null, closable);
        v.setLocationRelativeTo(this);
        v.setVisible(true);

        if (idcli > 0) {
            jtfdCliente.setText(nomcli);
            jtfdCliente.setForeground(Color.BLACK);
        } else {
            jtfdCliente.setText("");
            idcli = 0;
        }
    }//GEN-LAST:event_jbtnBClienteActionPerformed

    private void cbxtipodocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxtipodocumentoActionPerformed

        subtotal = 0;
        for (int i = 0; i < jTable1.getRowCount(); i++) {
            float we = Float.parseFloat(dtm.getValueAt(i, 4).toString());
            subtotal += we;
        }
        VerTotales();
    }//GEN-LAST:event_cbxtipodocumentoActionPerformed

    private void tbxnrodocumentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbxnrodocumentoKeyPressed
//        if (evt.getKeyChar() == KeyEvent.VK_SPACE) {
//            jbtnAgregarActionPerformed(null);
//        }
//        if (evt.getKeyChar() == KeyEvent.VK_ENTER) {
//            jbtnVenderActionPerformed(null);
//        }
    }//GEN-LAST:event_tbxnrodocumentoKeyPressed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
//        jtfdcodbarra.setFocusable(true);
//        jtfdcodbarra.grabFocus();
//        jtfdcodbarra.grabFocus();
//        try {
//
////            Habilitar(false);
//            dtm = (DefaultTableModel) jTable1.getModel();
//            if (IngresosADN.EvaluarApertura(Hoy()) == false) {
//                JOptionPane.showMessageDialog(rootPane, "Debe aperturar caja para realizar ventas");
//                JDAperturaCaja a = new JDAperturaCaja(null, closable);
//                a.setLocationRelativeTo(this);
//                a.setVisible(true);
//                if (apertura == false) {
//                    dispose();
//                }
//
//            }
////            jtfdcodbarra.requestFocus();
////            jtfdcodbarra.grabFocus();
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(rootPane, e.toString());
//        }
    }//GEN-LAST:event_formInternalFrameActivated

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        try {
            if (estadoventa == false) {
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    Productos p = new Productos();
                    p.setIdProducto(Integer.parseInt(dtm.getValueAt(i, 0).toString()));
                    p.setStock(Float.parseFloat(dtm.getValueAt(i, 1).toString()));
                    ProductosADN.AÃ±adirStock(p);

                }

            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
    }//GEN-LAST:event_formInternalFrameClosing

    private void jbtnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnNuevoActionPerformed
        try {
            if (jbtnNuevo.getText().equals("Nuevo")) {
                jbtnNuevo.setText("Cancelar");
                //            Habilitar(true);
                jbtnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/cancelar1.png")));
            } else {
                jbtnNuevo.setText("Nuevo");

                jbtnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/ven2_result.png")));
            }
            Limpiar();
            VerDocumento();
            subtotal = 0;
            VerTotales();
            idcli = 1;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
    }//GEN-LAST:event_jbtnNuevoActionPerformed

    private void jbtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAgregarActionPerformed
        ProX = new ProductoDetalle();
        llamada = true;
        VerDocumento();
//        VerTotales();
        JDBuscarProductos v = new JDBuscarProductos(null, closable);
        v.setLocationRelativeTo(this);
        v.setVisible(true);

        if (ProX.getIdProducto() > 0) {
            int nro = jTable1.getRowCount();
            int aux = 0;
            float impA = 0f, preA = 0f, canA = 0f;
            //            JOptionPane.showMessageDialog(rootPane, "waaaa");
            boolean estado = false;
            for (int f = 0; f < nro; f++) {
                aux = Integer.parseInt(dtm.getValueAt(f, 0).toString());
                if (aux == ProX.getIdProducto()) {
                    estado = true;
                    preA = Float.parseFloat(dtm.getValueAt(f, 3).toString());
                    canA = Float.parseFloat(dtm.getValueAt(f, 1).toString());
                    impA = Float.parseFloat(dtm.getValueAt(f, 4).toString());
                    canA += ProX.getCantidad();
//                    try {
//                        if (canA > ProductosADN.CapturaStock(ProX)) {
//                            canA = ProductosADN.CapturaStock(ProX);
//                            JOptionPane.showMessageDialog(rootPane, "Cantidad a vender supera el stock del producto");
//                        }
//                    } catch (Exception e) {
//                        JOptionPane.showMessageDialog(rootPane, "Error en capturar el stock" + e.toString());
//                    }

                    ProX.setImporte(preA * canA);
                    subtotal -= impA;
                    subtotal += ProX.getImporte();
                    dtm.setValueAt(String.valueOf(canA), f, 1);
                    dtm.setValueAt(String.valueOf(ProX.getImporte()), f, 4);
                    //                    jbtnAgregar.requestFocus();
                    break;
                }
            }
            if (estado == false) {
                dtm.addRow(ProX.DatosToArray());
                subtotal += ProX.getImporte();
            }
            VerTotales();
//            jtfdcodbarra.requestFocus();
//            tbxnrodocumento.requestFocus();
        }

    }//GEN-LAST:event_jbtnAgregarActionPerformed

    private void jbtnAgregarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnAgregarKeyPressed
    }//GEN-LAST:event_jbtnAgregarKeyPressed

    private void jbtnQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnQuitarActionPerformed
        try {
            int f = jTable1.getSelectedRow();
            if (f >= 0) {
                Productos p = new Productos();
                p.setIdProducto(Integer.parseInt(dtm.getValueAt(f, 0).toString()));
                p.setStock(Float.parseFloat(dtm.getValueAt(f, 1).toString()));
                ProductosADN.AÃ±adirStock(p);
                float impA = Float.parseFloat(dtm.getValueAt(f, 4).toString());
                subtotal -= impA;
                VerTotales();
                dtm.removeRow(f);
            }
        } catch (Exception exception) {
            JOptionPane.showMessageDialog(rootPane, "Error inesperado");
        }
    }//GEN-LAST:event_jbtnQuitarActionPerformed

    private void jbtnVenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnVenderActionPerformed
        try {

            if (jTable1.getRowCount() > 0) {
                total = Float.parseFloat(jlblTotal.getText().substring(4, jlblTotal.getText().length()));
                //                JDCobrar c = new JDCobrar(null, closable);
                //                c.setLocationRelativeTo(this);
                //                c.setVisible(true);

                if (estado) {
                    if (jTable1.getRowCount() > 0) {

                        Calendar calendario = new GregorianCalendar();
                        String hora = "";
                        int hor = calendario.get(Calendar.HOUR_OF_DAY);
                        int minutos = calendario.get(Calendar.MINUTE);
                        int segundos = calendario.get(Calendar.SECOND);
                        //                        tbxhora.setText(hora + ":" + minutos);
                        hora = hor + ":" + minutos + ":" + segundos;
                        Ventas aux = new Ventas();
                        aux.setIdventa(0);
                        //                Clientes c= new Clientes();
                        //                c.setIdCliente(idcli);
                        aux.setIdcliente(idcli);
                        aux.setTipoDoc(new TipoDoc(TipoDocADN.getId(cbxtipodocumento.getSelectedItem().toString())));
                        aux.setSerie(tbxserie.getText().trim());
                        aux.setNro(tbxnrodocumento.getText().trim());
                        String fecha = Formatos.sdfFecha.format(jdprFecVenta.getDate());
                        Date fechasql = Formatos.FechaSQL(fecha);
                        //                        Date horasql = Formatos.HoraSql(hora);
                        aux.setFecha(fechasql);
                        aux.setTotal(Float.parseFloat(jlblTotal.getText().substring(4, jlblTotal.getText().length())));

                        aux.setIgv(Float.parseFloat(jtfdIGV.getText()));
                        aux.setEstado("1");
                        aux.setIdusuario(1);
                        aux.setHora(hora);
                        aux.setSubtotal(Float.parseFloat(jtfdSubTotal.getText()));
                        LinkedList<Detalle_Venta> dv = new LinkedList<>();
                        Detalle_Venta d = null;
                        int nr = jTable1.getRowCount();
                        for (int f = 0; f < nr; f++) {
                            d = new Detalle_Venta();
                            d.setIdProducto(Integer.parseInt(dtm.getValueAt(f, 0).toString()));
                            d.setCantidad(Float.parseFloat(dtm.getValueAt(f, 1).toString()));
                            d.setPrecio(Float.parseFloat(dtm.getValueAt(f, 3).toString()));
                            d.setImporte(Float.parseFloat(dtm.getValueAt(f, 4).toString()));
                            dv.add(d);
                        }
                        aux.setLista(dv);

                        int idVenta = VentasADN.Guardar(aux);
                        if (idVenta > 0) {
                            JOptionPane.showMessageDialog(rootPane, ":. Venta Efectuada .:");
                                                        for (int f = 0; f < nr; f++) {
                                                            Productos p = new Productos();
                                                            p.setStock(Float.parseFloat(dtm.getValueAt(f, 1).toString()));
                                                            p.setIdProducto(Integer.parseInt(dtm.getValueAt(f, 0).toString()));
                                                            boolean act_stock = ProductosADN.QuitarStock(p);
                                                        }
                                                        String productos = "";
                                                        int filas = jTable1.getRowCount();
                            
                                                        int espacio1 = 7;
                                                        int espacio2 = 23;
                                                        int espacio3 = 8;
                            
                                                        int resta1 = 0;
                                                        int resta2 = 0;
                            
                                                        String espacios1 = "";
                                                        String espacios2 = "";
                            
                                                        String can = "";
                                                        String pro = "";
                                                        String pre = "";
                            
                                                        for (int i = 0; i < filas; i++) {
                                                            if (dtm.getValueAt(i, 1).toString().length() < espacio1) {
                                                                can = dtm.getValueAt(i, 1).toString();
                                                                resta1 = espacio1 - dtm.getValueAt(i, 1).toString().length();
                            
                                                            } else {
                                                                can = dtm.getValueAt(i, 1).toString().substring(0, espacio1 - 1);
                                                            }
                                                            if (dtm.getValueAt(i, 2).toString().length() < espacio2) {
                                                                resta2 = espacio2 - dtm.getValueAt(i, 2).toString().length();
                                                                pro = dtm.getValueAt(i, 2).toString();
                                                            } else {
                                                                pro = dtm.getValueAt(i, 2).toString().substring(0, espacio2 - 1);
                                                                pro += " ";
                                                            }
                                                            if (dtm.getValueAt(i, 4).toString().length() < espacio3) {
                                                                pre = dtm.getValueAt(i, 4).toString();
                                                            } else {
                                                                pre = dtm.getValueAt(i, 4).toString().substring(0, espacio3 - 1);
                                                            }
                                                            for (int j = 0; j < resta1; j++) {
                                                                espacios1 += " ";
                                                            }
                                                            for (int j = 0; j < resta2; j++) {
                                                                espacios2 += " ";
                                                            }
                                                            productos += can + espacios1 + pro + espacios2 + pre + "\n    ";
                                                            espacios1 = "";
                                                            espacios2 = "";
                                                        }
                                                        try {
                            
//                                                            Ticket tk = new Ticket("CHANCHOCLOC", "LOCAL PRINCIPAL","", tbxserie.getText() + " - " + tbxnrodocumento.getText(), "-", jdprFecVenta.getDate().toString(), jdprFecVenta.getDate().toString(), jdprFecVenta.getDate().toString(), productos, jtfdSubTotal.getText(), jtfdIGV.getText(), jlblTotal.getText(), String.valueOf(recidido), String.valueOf(vuelto));
                            //                                JOptionPane.showMessageDialog(rootPane, productos);
                            //                                llamando al metodo
//                                                            tk.Imprimir();
                                                        } catch (Exception e) {
                                                            JOptionPane.showMessageDialog(rootPane, "No se imprimira el ticket");
                                                        }
                            
                            jbtnNuevoActionPerformed(evt);
                            Limpiar();
                            jtfdcodbarra.grabFocus();
                        }
                    }
                }
            }

            if (estadoventa == false) {
                for (int i = 0; i < jTable1.getRowCount(); i++) {
                    Productos p = new Productos();
                    p.setIdProducto(Integer.parseInt(dtm.getValueAt(i, 0).toString()));
                    p.setStock(Float.parseFloat(dtm.getValueAt(i, 1).toString()));
                    ProductosADN.AÃ±adirStock(p);

                }

            }

        } catch (Exception exception) {
            JOptionPane.showMessageDialog(rootPane, exception.toString());
        }
    }//GEN-LAST:event_jbtnVenderActionPerformed

    private void jtfdcodbarraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfdcodbarraKeyPressed
        try {
//            jbtnNuevoActionPerformed(null);
            VerDocumento();
            if (evt.getKeyChar() <= (char) 13) {
                try {
                    
//                    VerDatos();}
                    llamada = true;
                    codbarra = jtfdcodbarra.getText();
                    jtfdcodbarra.setText("");
//                    jTable1.setRowSelectionInterval(0, 0);
                    ProX = new ProductoDetalle();
                    JDBuscarProductoLector c = new JDBuscarProductoLector(null, closable);
                    c.setLocationRelativeTo(this);
                    c.setVisible(true);
                    if (ProX.getIdProducto() > 0) {
                        int nro = jTable1.getRowCount();
                        int aux = 0;
                        float impA = 0f, preA = 0f, canA = 0f;
//            JOptionPane.showMessageDialog(rootPane, "waaaa");
                        boolean estado = false;
                        for (int f = 0; f < nro; f++) {
                            aux = Integer.parseInt(dtm.getValueAt(f, 0).toString());
                            if (aux == ProX.getIdProducto()) {
                                estado = true;
                                preA = Float.parseFloat(dtm.getValueAt(f, 3).toString());
                                canA = Float.parseFloat(dtm.getValueAt(f, 1).toString());
                                impA = Float.parseFloat(dtm.getValueAt(f, 4).toString());
                                canA += ProX.getCantidad();
//                    try {
//                        if (canA > ProductosADN.CapturaStock(ProX)) {
//                            canA = ProductosADN.CapturaStock(ProX);
//                            JOptionPane.showMessageDialog(rootPane, "Cantidad a vender supera el stock del producto");
//                        }
//                    } catch (Exception e) {
//                        JOptionPane.showMessageDialog(rootPane, "Error en capturar el stock" + e.toString());
//                    }

                                ProX.setImporte(preA * canA);
                                subtotal -= impA;
                                subtotal += ProX.getImporte();
                                dtm.setValueAt(String.valueOf(canA), f, 1);
                                dtm.setValueAt(String.valueOf(ProX.getImporte()), f, 4);
//                    jbtnAgregar.requestFocus();
                                break;
                            }
                        }
                        if (estado == false) {
                            dtm.addRow(ProX.DatosToArray());
                            subtotal += ProX.getImporte();
                        }
                        VerTotales();
//            tbxnrodocumento.requestFocus();
                    }
                } catch (Exception ex) {
                    Logger.getLogger(JDBuscarProductos.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (evt.getKeyCode() == KeyEvent.VK_SPACE) {
                jbtnAgregarActionPerformed(null);
                jtfdcodbarra.setText("");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jtfdcodbarraKeyPressed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        dtm = (DefaultTableModel) jTable1.getModel();
    }//GEN-LAST:event_formInternalFrameOpened

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
    }//GEN-LAST:event_formMouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        jtfdcodbarra.requestFocus();
    }//GEN-LAST:event_formComponentShown

    private void jtfdcodbarraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfdcodbarraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfdcodbarraActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbxtipodocumento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbtnAgregar;
    private javax.swing.JButton jbtnBCliente;
    private javax.swing.JButton jbtnNuevo;
    private javax.swing.JButton jbtnQuitar;
    private javax.swing.JButton jbtnVender;
    private com.michaelbaranov.microba.calendar.DatePicker jdprFecVenta;
    private javax.swing.JLabel jlblTotal;
    private org.swing.componet.JTextBoxHintDS jtfdCliente;
    private javax.swing.JTextField jtfdIGV;
    private javax.swing.JTextField jtfdSubTotal;
    private javax.swing.JTextField jtfdcodbarra;
    private javax.swing.JTextField tbxnrodocumento;
    private javax.swing.JTextField tbxserie;
    // End of variables declaration//GEN-END:variables

    static Date Hoy() throws ParseException {
        String fecha1 = Formatos.sdfFecha.format(new java.util.Date());
        Date fechasql = Formatos.FechaSQL(fecha1);
        return fechasql;
    }

    private void Habilitar(boolean cs) {
        jbtnAgregar.setEnabled(cs);
        jbtnQuitar.setEnabled(cs);
        jbtnVender.setEnabled(cs);
        jbtnBCliente.setEnabled(cs);
        cbxtipodocumento.setEnabled(cs);
    }

    private void VerDocumento() {
        String doc = cbxtipodocumento.getSelectedItem().toString().trim();
        String GenerarNro = VentasADN.GeneraNro(doc);
        String GenerarSerie = VentasADN.GenerarSerie(doc);
        tbxserie.setText(GenerarSerie);
        tbxnrodocumento.setText(GenerarNro);
    }

    private void Limpiar() throws SQLException, ClassNotFoundException {
//        tbxcliente.setText("");
        idcli = 0;
        tbxserie.setText("");
        tbxnrodocumento.setText("");
        int nr = jTable1.getRowCount();
        subtotal=0;
        jlblTotal.setText("S/. " + Formatos.df.format(subtotal));
        
        if (estadoventa == false) {
            for (int i = 0; i < jTable1.getRowCount(); i++) {
                Productos p = new Productos();
                p.setIdProducto(Integer.parseInt(dtm.getValueAt(i, 0).toString()));
                p.setStock(Float.parseFloat(dtm.getValueAt(i, 1).toString()));
                ProductosADN.AÃ±adirStock(p);

            }

        }
        for (int i = 0; i < nr; i++) {
            dtm.removeRow(0);
        }
    }

    private void VerTotales() {
        String doc = cbxtipodocumento.getSelectedItem().toString();
//        float tot=0;
//        float igv = 0; 
//        
//        if (doc.equals("Factura")) {
//            igv = subtotal * 0.19f;
//            subtotal -=igv;
//            tot = subtotal + igv;
//        }
//        if (doc.equals("Boleta")) {
//            tot =subtotal+igv;
//        }

        float tot = 0;
        if (doc.equals("Factura")) {
            igv = 0;
            tot = 0;
//            igv = subtotal * 0.19f;
            subtotal = subtotal / 1.18f;
//            subtotal = subtotal - igv;
            igv = subtotal * 0.18f;
            tot = subtotal + igv;
            jtfdSubTotal.setText(Formatos.df.format(subtotal));
            subtotal = tot;
            jtfdIGV.setText(Formatos.df.format(igv));
            jlblTotal.setText("S/. " + Formatos.df.format(tot));
        } else {
            tot = subtotal;
            jtfdSubTotal.setText(Formatos.df.format(0.00));

            jtfdIGV.setText(Formatos.df.format(0.00));
            jlblTotal.setText("S/. " + Formatos.df.format(tot));
//            tot=subtotal+igv;
        }

    }

    private void VerDatos() {
        try {
//            int filas = jteLista.getRowCount();
//            for (int i = 0; i < filas; i++) {
//                dtm.removeRow(0);
//            }
            Productos c = new Productos();
            c.setCodbarra(jtfdcodbarra.getText().trim());
//            c.setIdProducto(Integer.parseInt(jtfdcodprod.getText().trim()));
//            if (rbncategoria.isSelected()) {
//                c.setCategoriasx(new Categorias(0, jtfdBuscarDescripcion.getText().trim()));
//                c.setDescripcion("");
//                c.setMarca(new Marcas(""));
            for (Productos la : ProductosADN.FiltroCodBarra(c)) {
                dtm.addRow(la.ArregloDatos());
            }
//            } else if (rbnmarca.isSelected()) {
//                c.setCategoriasx(new Categorias(0, ""));
//                c.setDescripcion("");
//                c.setMarca(new Marcas(jtfdBuscarDescripcion.getText().trim()));
//                for (Productos la : ProductosADN.ListaProductos_Cat(c)) {
//                    dtm.addRow(la.ArregloDatos());
//                }
//            } else if (rbndescripcion.isSelected()) {
//                c.setCategoriasx(new Categorias(0, ""));
//                c.setDescripcion(jtfdBuscarDescripcion.getText().trim());
//                c.setMarca(new Marcas(""));
//                for (Productos la : ProductosADN.ListaProductos_Cat(c)) {
//                    dtm.addRow(la.ArregloDatos());
//                }
//            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
    }
}
//class Ticket {
//
//    private String contentTicket = "    COMERCIAL {{nameLocal}}\n"
//            + "    MERCADO # 2 - PISCO\n"
//            + "    =========================================\n"
//            + "    Ticket # {{ticket}}\n"
//            + "    LE ATENDIO: {{cajero}}\n"
//            + "    {{dateTime}}\n"
//            + "    Cant.  Descripcion              Importe\n"
//            + "    =========================================\n"
//            + "    {{items}}\n"
//            + "    =========================================\n"
//            + "    SUBTOTAL: {{subTotal}}\n"
//            + "    IGV: {{tax}}      |     RECIBIDO: {{recibo}}\n"
//            + "    TOTAL: {{total}}     |    CAMBIO: {{change}}\n"
//            + "    =========================================\n"
//            + "    GRACIAS POR SU COMPRA...\n"
//            + "                ******::::::::*******"
//            + "\n           "
//            + "\n           "
//            + "\n           "
//            + "\n           "
//            + "\n           "
//            + "\n           "
//            + "\n           "
//            + "\n           "
//            + "\n           "
//            + "\n           ";
//
//    //El constructor que setea los valores a la instancia
//    Ticket(String nameLocal, String expedition, String ticket, String caissier, String dateTime, String items, String subTotal, String tax, String total, String recibo, String change) {
//        this.contentTicket = this.contentTicket.replace("{{nameLocal}}", nameLocal);
//        this.contentTicket = this.contentTicket.replace("{{expedition}}", expedition);
//        this.contentTicket = this.contentTicket.replace("{{ticket}}", ticket);
//        this.contentTicket = this.contentTicket.replace("{{cajero}}", caissier);
//        this.contentTicket = this.contentTicket.replace("{{dateTime}}", dateTime);
//        this.contentTicket = this.contentTicket.replace("{{items}}", items);
//        this.contentTicket = this.contentTicket.replace("{{subTotal}}", subTotal);
//        this.contentTicket = this.contentTicket.replace("{{tax}}", tax);
//        this.contentTicket = this.contentTicket.replace("{{total}}", total);
//        this.contentTicket = this.contentTicket.replace("{{recibo}}", recibo);
//        this.contentTicket = this.contentTicket.replace("{{change}}", change);
//    }
//
//    public void Imprimir() {
//        //Especificamos el tipo de dato a imprimir
//        //Tipo: bytes; Subtipo: autodetectado
//        DocFlavor flavor = DocFlavor.BYTE_ARRAY.AUTOSENSE;
//
//        //Aca obtenemos el servicio de impresion por defatul
//        //Si no quieres ver el dialogo de seleccionar impresora usa esto
//        //PrintService defaultService = PrintServiceLookup.lookupDefaultPrintService();
//
//
//        //Con esto mostramos el dialogo para seleccionar impresora
//        //Si quieres ver el dialogo de seleccionar impresora usalo
//        //Solo mostrara las impresoras que soporte arreglo de bits
//        PrintRequestAttributeSet pras = new HashPrintRequestAttributeSet();
//        PrintService printService[] = PrintServiceLookup.lookupPrintServices(flavor, pras);
//        PrintService defaultService = PrintServiceLookup.lookupDefaultPrintService();
//        PrintService service = ServiceUI.printDialog(null, 700, 200, printService, defaultService, flavor, pras);
//
//        //Creamos un arreglo de tipo byte
//        byte[] bytes;
//
//        //Aca convertimos el string(cuerpo del ticket) a bytes tal como
//        //lo maneja la impresora(mas bien ticketera :p)
//
//        bytes = this.contentTicket.getBytes();
//
//        //Creamos un documento a imprimir, a el se le appendeara
//        //el arreglo de bytes
//        Doc doc = new SimpleDoc(bytes, flavor, null);
//
//        //Creamos un trabajo de impresiÃ³n
//        DocPrintJob job = service.createPrintJob();
//
//        //Imprimimos dentro de un try de a huevo
//        try {
//            //El metodo print imprime
//            job.print(doc, null);
//        } catch (Exception er) {
//            JOptionPane.showMessageDialog(null, "Error al imprimir: " + er.getMessage());
//        }
//    }

