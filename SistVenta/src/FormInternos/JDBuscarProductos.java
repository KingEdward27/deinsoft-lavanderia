/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package FormInternos;

import Adicional.AutoCompletion;
import accesodatos.*;
import entidades.Categorias;
import entidades.*;
import entidades.Productos;
import entidades.UnidadMedidas;
import java.awt.Color;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author EDWARD
 */
public class JDBuscarProductos extends javax.swing.JDialog {

    /**
     * Creates new form JDBuscarProductos
     */
    public JDBuscarProductos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
//        jtfdFiltrarCodBarra.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS,Collections.EMPTY_SET);
    }
    void OcultarColumna(JTable jtable, int indice)
    {
        jtable.getColumnModel().getColumn(indice).setMaxWidth(0);
        jtable.getColumnModel().getColumn(indice).setMinWidth(0);
        jtable.getColumnModel().getColumn(indice).setPreferredWidth(0);
    }
    void ModificarTama√±o(JTable jtable, int indice,int tamano)
    {
        jtable.getColumnModel().getColumn(indice).setMaxWidth(tamano);
        jtable.getColumnModel().getColumn(indice).setMinWidth(tamano);
        jtable.getColumnModel().getColumn(indice).setPreferredWidth(tamano);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jteLista = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtfdBuscarDescripcion = new org.swing.componet.JTextBoxHintDS();
        cbxMarca = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        cbxColor = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        cbxCaracteristica = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jbtnAgregar1 = new javax.swing.JButton();
        jbtnAgregar2 = new javax.swing.JButton();
        jbtnAgregar3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnEnviar = new javax.swing.JButton();
        jtfdCantidad = new org.swing.componet.JTextBoxHintDS();
        jtfdBuscarDescripcion1 = new org.swing.componet.JTextBoxHintDS();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(">>>:::::: Lista de Productos ::::::<<<");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowIconified(java.awt.event.WindowEvent evt) {
                formWindowIconified(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jteLista.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jteLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdProducto", "Marca", "Categoria", "UnidadMedida", "Descripcion", "Costo", "Precio", "Precio x mayor", "Paquete", "Stock", "Minimo", "CodigoBarra", "Observacion", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jteLista.setFillsViewportHeight(true);
        jteLista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jteListaMouseClicked(evt);
            }
        });
        jteLista.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jteListaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jteListaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(jteLista);
        jteLista.getColumnModel().getColumn(8).setMinWidth(0);
        jteLista.getColumnModel().getColumn(8).setPreferredWidth(0);
        jteLista.getColumnModel().getColumn(8).setMaxWidth(0);
        jteLista.getColumnModel().getColumn(10).setMinWidth(0);
        jteLista.getColumnModel().getColumn(10).setPreferredWidth(0);
        jteLista.getColumnModel().getColumn(10).setMaxWidth(0);
        jteLista.getColumnModel().getColumn(11).setMinWidth(0);
        jteLista.getColumnModel().getColumn(11).setPreferredWidth(0);
        jteLista.getColumnModel().getColumn(11).setMaxWidth(0);
        jteLista.getColumnModel().getColumn(12).setMinWidth(0);
        jteLista.getColumnModel().getColumn(12).setPreferredWidth(0);
        jteLista.getColumnModel().getColumn(12).setMaxWidth(0);
        jteLista.getColumnModel().getColumn(13).setMinWidth(0);
        jteLista.getColumnModel().getColumn(13).setPreferredWidth(0);
        jteLista.getColumnModel().getColumn(13).setMaxWidth(0);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar:"));

        jLabel1.setText("Marca o Descripcion:");

        jtfdBuscarDescripcion.setHint("Ingrese Marca o Descripcion");
        jtfdBuscarDescripcion.setPrimeraMayus(java.lang.Boolean.TRUE);
        jtfdBuscarDescripcion.setTipoTextBox(null);
        jtfdBuscarDescripcion.setTiponumero(null);
        jtfdBuscarDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfdBuscarDescripcionActionPerformed(evt);
            }
        });
        jtfdBuscarDescripcion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfdBuscarDescripcionFocusGained(evt);
            }
        });
        jtfdBuscarDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfdBuscarDescripcionKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfdBuscarDescripcionKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfdBuscarDescripcionKeyTyped(evt);
            }
        });

        cbxMarca.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cbxMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxMarcaActionPerformed(evt);
            }
        });
        cbxMarca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cbxMarcaKeyTyped(evt);
            }
        });

        jLabel10.setText("Marca:");

        cbxColor.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cbxColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxColorActionPerformed(evt);
            }
        });
        cbxColor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cbxColorKeyTyped(evt);
            }
        });

        jLabel11.setText("Color:");

        cbxCaracteristica.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cbxCaracteristica.setNextFocusableComponent(jtfdCantidad);
        cbxCaracteristica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCaracteristicaActionPerformed(evt);
            }
        });
        cbxCaracteristica.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cbxCaracteristicaKeyTyped(evt);
            }
        });

        jLabel12.setText("Caracteristica:");

        jbtnAgregar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/agregar.png"))); // NOI18N
        jbtnAgregar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAgregar1ActionPerformed(evt);
            }
        });

        jbtnAgregar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/agregar.png"))); // NOI18N
        jbtnAgregar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAgregar2ActionPerformed(evt);
            }
        });

        jbtnAgregar3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/agregar.png"))); // NOI18N
        jbtnAgregar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAgregar3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfdBuscarDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbxMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnAgregar1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbxColor, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnAgregar2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbxCaracteristica, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnAgregar3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfdBuscarDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jbtnAgregar1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cbxMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11)
                                .addComponent(jLabel12))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbxColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addComponent(cbxCaracteristica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(jbtnAgregar2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbtnAgregar3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jLabel5.setText("Cantidad:");

        btnEnviar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/enviar.png"))); // NOI18N
        btnEnviar.setText("Enviar");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        jtfdCantidad.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jtfdCantidad.setHint("00");
        jtfdCantidad.setTiponumero(org.Interfaces.Enum.TiposNumeros.Decimal);
        jtfdCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfdCantidadActionPerformed(evt);
            }
        });
        jtfdCantidad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfdCantidadFocusGained(evt);
            }
        });
        jtfdCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfdCantidadKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfdCantidadKeyTyped(evt);
            }
        });

        jtfdBuscarDescripcion1.setHint("Descripci√≥n abreviada");
        jtfdBuscarDescripcion1.setPrimeraMayus(java.lang.Boolean.TRUE);
        jtfdBuscarDescripcion1.setTipoTextBox(null);
        jtfdBuscarDescripcion1.setTiponumero(null);
        jtfdBuscarDescripcion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfdBuscarDescripcion1ActionPerformed(evt);
            }
        });
        jtfdBuscarDescripcion1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfdBuscarDescripcion1FocusGained(evt);
            }
        });
        jtfdBuscarDescripcion1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfdBuscarDescripcion1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfdBuscarDescripcion1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfdBuscarDescripcion1KeyTyped(evt);
            }
        });

        jLabel6.setText("Descripci√≥n abreviada:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(265, 265, 265)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfdCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jtfdBuscarDescripcion1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnEnviar)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtfdCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfdBuscarDescripcion1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public static int iduni = 0, idpro = 0, idsub = 0;
    public static String estado = "", nomuni = "", nomsub = "", opcion = "";
    public static boolean modif = false, llamada = false;
    DefaultTableModel dtm = null;

    private void jteListaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jteListaMouseClicked
        if (evt.getClickCount() == 1) {
            if (JIVentas.llamada || JIVentas2.llamada) {
//                            if (rbnpaquete.isSelected()) {
//                            } else if (rbnunidades.isSelected()) {
//                                jtfdPrecio.setText(jteLista.getValueAt(jteLista.getSelectedRow(), 6).toString());
//                                jtfdPrecio.setText(jteLista.getValueAt(jteLista.getSelectedRow(), 7).toString());
//                            }

            } 
//            jtfdCantidad.requestFocus();
        } else if (evt.getClickCount() == 2) {
        }
    }//GEN-LAST:event_jteListaMouseClicked

    private void formWindowIconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowIconified
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowIconified

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try {
//            rbnunidades.isSelected();s
//            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
//            jtfdFiltrarCodBarra.grabFocus();
//            jteLista.getColumnModel().getColumn(4).setPreferredWidth(170);
            OcultarColumna(jteLista, 0);
            OcultarColumna(jteLista, 2);
            OcultarColumna(jteLista, 3);
            OcultarColumna(jteLista, 5);
            
            OcultarColumna(jteLista, 7);
            OcultarColumna(jteLista, 9);
            ModificarTama√±o(jteLista, 4, 300);
            dtm = (DefaultTableModel) jteLista.getModel();
            estado = "1";
            VerDatos();
            CargarMarcas();
            CargarColores();
            CargarCaracteristicas();
            AutoCompletion.enable(cbxMarca);
            AutoCompletion.enable(cbxColor);
            AutoCompletion.enable(cbxCaracteristica);
//            JOptionPane.showMessageDialog(rootPane, JIVentas2.llamada);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
    }//GEN-LAST:event_formWindowOpened
    void CargarMarcas() throws SQLException, ClassNotFoundException
    {
        Marcas c = new Marcas();
        c.setNombre("");
        c.setEstado("1");
        cbxMarca.removeAllItems();
        cbxMarca.addItem("-Seleccione-");
        for (Marcas object : MarcasADN.Lista(c)) {
            cbxMarca.addItem(object.getNombre());
        }
    }
    void CargarColores() throws SQLException, ClassNotFoundException
    {
        Colores c = new Colores();
        c.setNombre("");
        c.setEstado("1");
        cbxColor.removeAllItems();
        cbxColor.addItem("-Seleccione-");
        for (Colores object : ColoresADN.Lista(c)) {
            cbxColor.addItem(object.getNombre());
        }
    }
    void CargarCaracteristicas() throws SQLException, ClassNotFoundException
    {
        Caracteristicas c = new Caracteristicas();
        c.setNombre("");
        c.setEstado("1");
        cbxCaracteristica.removeAllItems();
        cbxCaracteristica.addItem("-Seleccione-");
        for (Caracteristicas object : CaracteristicasADN.Lista(c)) {
            cbxCaracteristica.addItem(object.getNombre());
        }
    }
    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        try {
            if (jteLista.getSelectedRowCount() >= 0) {
                if (jtfdCantidad.getText().length()==0) {
                    JOptionPane.showMessageDialog(rootPane, "Ingrese la cantidad");
                    jtfdCantidad.requestFocus();
                    return;
                }
                if (JIVentas.llamada) {
                    
                    int fila = jteLista.getSelectedRow();
                    idpro = Integer.parseInt(jteLista.getValueAt(fila, 0).toString());
                  
                    float can = Float.parseFloat(jtfdCantidad.getText().toString());
//                    float stock = Float.parseFloat(jteLista.getValueAt(fila, 9).toString());
//                    if (rbnpaquete.isSelected()) {
//                        float conversor = ProductosADN.Cantidad_XPaquete(idpro);
//                        can = conversor * can;
//                    }
//                    if (can > stock || stock == 0) {
//                        JOptionPane.showMessageDialog(rootPane, "No hay stock suficiente");
//                    } else {
                    Productos p = new Productos();
                    p.setPrecio(0f);
                    p.setStock(can);
                    p.setIdProducto(idpro);
                    if (Float.parseFloat(jteLista.getValueAt(jteLista.getSelectedRow(), 7).toString()) != 0f) {

                        p.setPrecio2(0f);
                        
                    }
                    if (fila >= 0 ) {
                        JIVentas.ProX.setIdProducto(idpro);
                        if (jtfdBuscarDescripcion1.getText().length()>0) {
                            JIVentas.ProX.setDescripcion(jtfdBuscarDescripcion1.getText());
                        }
                        else
                        {
                            JIVentas.ProX.setDescripcion((jteLista.getValueAt(fila, 4).toString()+ " "+
                                                      (cbxMarca.getSelectedIndex()==0?"": cbxMarca.getSelectedItem().toString())+ " "+
                                                      (cbxColor.getSelectedIndex()==0?"":cbxColor.getSelectedItem().toString()) + " "+
                                                      (cbxCaracteristica.getSelectedIndex()==0?"":cbxCaracteristica.getSelectedItem().toString()) +" ").toUpperCase());
                        }
                        
                        JIVentas.ProX.setPrecio(Float.parseFloat(jteLista.getValueAt(fila, 6).toString()));
                        JIVentas.ProX.setCantidad(can);
                        if (cbxMarca.getSelectedIndex()!=0) {
                            JIVentas.ProX.setIdmarca(MarcasADN.CapturarIDMarca(cbxMarca.getSelectedItem().toString()));
                        }
                        if (cbxColor.getSelectedIndex()!=0) {
                            JIVentas.ProX.setIdcolor(ColoresADN.CapturarIDColor(cbxColor.getSelectedItem().toString()));
                        }
                        if (cbxCaracteristica.getSelectedIndex()!=0) {
                            JIVentas.ProX.setIdcaracteristica(CaracteristicasADN.CapturarIDCaracteristica(cbxCaracteristica.getSelectedItem().toString()));
                        }
//                        Productos p = new Productos();
//                        p.setPrecio(Float.parseFloat(jtfdPrecio.getText()));
                        p.setStock(can);
                        p.setIdProducto(idpro);
                        
                        dispose();
                    }

                }
                if (JIVentas2.llamada) {

                    int fila = jteLista.getSelectedRow();
                    idpro = Integer.parseInt(jteLista.getValueAt(fila, 0).toString());
                    float pre = 0f;
                    pre = 0f;
                    float can = Float.parseFloat(jtfdCantidad.getText().toString());
                    float stock = Float.parseFloat(jteLista.getValueAt(fila, 9).toString());

                    if (fila >= 0) {
                        JIVentas2.ProX.setIdProducto(idpro);
                        JIVentas2.ProX.setDescripcion(jteLista.getValueAt(fila, 4).toString());
                        JIVentas2.ProX.setPrecio(pre);
                        JIVentas2.ProX.setCantidad(can);
//                        ProductosADN.QuitarStock(p);
                        dispose();
                    }
                } 
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Operacion invalida - " + e.toString());
        }


    }//GEN-LAST:event_btnEnviarActionPerformed

    private void jtfdBuscarDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfdBuscarDescripcionActionPerformed
        try {
            VerDatos();
            if (jteLista.getRowCount() > 0) {
                jteLista.setRowSelectionInterval(0, 0);
                jteLista.requestFocus();
            }
//            else
//            {
//                int r = JOptionPane.showConfirmDialog(rootPane, "¬øNo se encontr√≥ coincidencia. Desea agregar el nuevo producto?");
//                if (r == JOptionPane.YES_OPTION) {
//                    try {
//                        String des = "", mar = "", ori = "";
//                        float cos = 0.0f, pre = 0.0f, pre2 = 0.0f, paquete = 0.0f, stock_min = 0.0f;
//
//                        mar = "1";
//                        des = jtfdBuscarDescripcion.getText().trim().toUpperCase();
//                        cos = 0f;
//                        pre = 0f;
//                        pre2 = 0f;
//                        stock_min = 0f;
//                        String obs = "";
//                        String barra = "";
//                        paquete = 0;
//                        Productos cli = null;
//                        String mensaje = "";
//                        if (des.length() == 0) {
//                            
//                        } else {
//                            Productos c = new Productos();
//                            c.setDescripcion(des);
//                            c.setIdProducto(0);
//                            if (modif == false) {
//                                //cli = new Productos(0, new Subcategorias(idsub), new UnidadMedidas(iduni), mar, des, ori, pre, 0, stock_min,obs, "1");
//                                cli = new Productos(0, new Marcas(1, ""), 
//                                                       new Categorias(1), 
//                                                new UnidadMedidas(1), 
//                                        des, cos, pre, pre2, paquete, 0.0f, stock_min, barra, obs, "1");
//                            } 
////                            else {
////                                //cli = new Productos(idpro, new Subcategorias(idsub), new UnidadMedidas(iduni), mar, des, ori, pre, 0, stock_min,obs, est);
////                                cli = new Productos(idpro, marca, categoria, unidadmedida, des, cos, pre, pre2, paquete, 0.0f, stock_min, barra, obs, estado);
////                                mensaje = "Datos actualizados correctamente";
////                            }
//                            if (ProductosADN.Evaluar(c)) {
//                                JOptionPane.showMessageDialog(rootPane, "Ya existe una categoria con el mismo nombre, No se puede registrar la categoria");
//
//                            } else {
//                                boolean gua = ProductosADN.Guardar(cli);
//                                if (gua) {
//
//                                    VerDatos();
//                                    if (jteLista.getRowCount() > 0) {
//                                        jteLista.setRowSelectionInterval(0, 0);
//                                        jteLista.requestFocus();
//                                    }
//                                }
//                            }
//
//
//                        }
//
//                    } catch (Exception e) {
//                        JOptionPane.showMessageDialog(rootPane, e.toString());
//                    }
//
//                }
//            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
    }//GEN-LAST:event_jtfdBuscarDescripcionActionPerformed

    private void jtfdCantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfdCantidadKeyPressed
        try {

//            if (evt.getKeyCode() == KeyEvent.VK_A) {
//                rbnpaquete.isSelected();
//                jtfdCantidad.requestFocus();
//            } else if (evt.getKeyCode() == KeyEvent.VK_E) {
//                rbnunidades.isSelected();
//                jtfdCantidad.requestFocus();
//            }
            if (jtfdCantidad.getText().length() > 0) {
                if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//                if (JIVentas.llamada) {
//                    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//                        int fila = jteLista.getSelectedRow();
//                        idpro = Integer.parseInt(jteLista.getValueAt(fila, 0).toString());
//                        float pre = Float.parseFloat(jtfdPrecio.getText().toString());
//                        float can = Float.parseFloat(jtfdCantidad.getText().toString());
//                        float stock = Float.parseFloat(jteLista.getValueAt(fila, 9).toString());
////                        if (rbnpaquete.isSelected()) {
////                            float conversor = ProductosADN.Cantidad_XPaquete(idpro);
////                            can = conversor * can;
////                        }
////                        if (can > stock || stock == 0) {
////                            JOptionPane.showMessageDialog(rootPane, "No hay stock suficiente");
////                        } else {
//                        if (fila >= 0 && pre > 0 && can > 0) {
//                            JIVentas.ProX.setIdProducto(idpro);
//                            JIVentas.ProX.setDescripcion(jteLista.getValueAt(fila, 4).toString());
//                            JIVentas.ProX.setPrecio(pre);
//                            JIVentas.ProX.setCantidad(can);
//                            Productos p = new Productos();
//
//                            p.setStock(can);
//                            p.setIdProducto(idpro);
//                            if (rbnunidades.isSelected() && Float.parseFloat(jteLista.getValueAt(jteLista.getSelectedRow(), 6).toString()) != Float.parseFloat(jtfdPrecio.getText())) {
//                                int r = JOptionPane.showConfirmDialog(rootPane, "¬øDesea actualizar el nuevo precio?");
//                                if (r == 0) {
//                                    p.setPrecio(Float.parseFloat(jtfdPrecio.getText()));
//                                    ProductosADN.ActualizarPrecio(p);
//
//
//                                }
//                            } else if (rbnpaquete.isSelected() && Float.parseFloat(jteLista.getValueAt(jteLista.getSelectedRow(), 7).toString()) != Float.parseFloat(jtfdPrecio.getText())) {
//                                int r = JOptionPane.showConfirmDialog(rootPane, "¬øDesea actualizar el nuevo precio?");
//                                if (r == 0) {
//                                    p.setPrecio2(Float.parseFloat(jtfdPrecio.getText()));
//                                    ProductosADN.ActualizarPrecio2(p);
//
//
//                                }
//                            }
//                            ProductosADN.QuitarStock(p);
//                            dispose();
//                        }
//
//
////                        }
//
//                    }
//                }
//                if (JIVentas2.llamada) {
//                    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//                        int fila = jteLista.getSelectedRow();
//                        idpro = Integer.parseInt(jteLista.getValueAt(fila, 0).toString());
//                        float pre = Float.parseFloat(jtfdPrecio.getText().toString());
//                        float can = Float.parseFloat(jtfdCantidad.getText().toString());
//                        float stock = Float.parseFloat(jteLista.getValueAt(fila, 9).toString());
////                        if (rbnpaquete.isSelected()) {
////                            float conversor = ProductosADN.Cantidad_XPaquete(idpro);
////                            can = conversor * can;
////                        }
////                        if (can > stock || stock == 0) {
////                            JOptionPane.showMessageDialog(rootPane, "No hay stock suficiente");
////                        } else {
//                        if (fila >= 0 && pre > 0 && can > 0) {
//                            JIVentas2.ProX.setIdProducto(idpro);
//                            JIVentas2.ProX.setDescripcion(jteLista.getValueAt(fila, 4).toString());
//                            JIVentas2.ProX.setPrecio(pre);
//                            JIVentas2.ProX.setCantidad(can);
//                            Productos p = new Productos();
//
//                            p.setStock(can);
//                            p.setIdProducto(idpro);
//                            if (rbnunidades.isSelected() && Float.parseFloat(jteLista.getValueAt(jteLista.getSelectedRow(), 6).toString()) != Float.parseFloat(jtfdPrecio.getText())) {
//                                int r = JOptionPane.showConfirmDialog(rootPane, "¬øDesea actualizar el nuevo precio?");
//                                if (r == 0) {
//                                    p.setPrecio(Float.parseFloat(jtfdPrecio.getText()));
//                                    ProductosADN.ActualizarPrecio(p);
//
//
//                                }
//                            } else if (rbnpaquete.isSelected() && Float.parseFloat(jteLista.getValueAt(jteLista.getSelectedRow(), 7).toString()) != Float.parseFloat(jtfdPrecio.getText())) {
//                                int r = JOptionPane.showConfirmDialog(rootPane, "¬øDesea actualizar el nuevo precio?");
//                                if (r == 0) {
//                                    p.setPrecio2(Float.parseFloat(jtfdPrecio.getText()));
//                                    ProductosADN.ActualizarPrecio2(p);
//
//
//                                }
//                            }
//                            ProductosADN.QuitarStock(p);
//                            dispose();
//                        }
//
//
////                        }
//
//                    }
//                } else if (JICompras.llamada) {
//                    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//                        int fila = jteLista.getSelectedRow();
//                        idpro = Integer.parseInt(jteLista.getValueAt(fila, 0).toString());
//                        float cos = Float.parseFloat(jtfdcosto.getText().toString());
//                        float can = Float.parseFloat(jtfdCantidad.getText().toString());
//                        if (rbnpaquete.isSelected()) {
//                            float conversor = ProductosADN.Cantidad_XPaquete(idpro);
//                            can = conversor * can;
//                        }
//                        if (fila >= 0 && cos > 0 && can > 0) {
//                            JICompras.ProX.setIdProducto(idpro);
//                            JICompras.ProX.setDescripcion(jteLista.getValueAt(fila, 4).toString());
//                            JICompras.ProX.setPrecio(cos);
//                            JICompras.ProX.setCantidad(can);
//                            Productos p = new Productos();
//                            p.setCosto(cos);
//                            p.setPrecio(Float.parseFloat(jtfdPrecio.getText()));
//                            p.setPrecio2(Float.parseFloat(jtfdPrecio2.getText()));
//                            p.setIdProducto(idpro);
//                            if (Float.parseFloat(jteLista.getValueAt(jteLista.getSelectedRow(), 5).toString()) != Float.parseFloat(jtfdPrecio.getText())) {
//                                ProductosADN.ActualizarCosto(p);
//                            }
//                            if (Float.parseFloat(jteLista.getValueAt(jteLista.getSelectedRow(), 6).toString()) != Float.parseFloat(jtfdPrecio.getText())) {
//                                ProductosADN.ActualizarPrecio(p);
//                            }
//                            if (Float.parseFloat(jteLista.getValueAt(jteLista.getSelectedRow(), 7).toString()) != Float.parseFloat(jtfdPrecio.getText())) {
//                                ProductosADN.ActualizarPrecio2(p);
//                            }
//                            dispose();
//                        }
//                    }
//                }
                    btnEnviarActionPerformed(null);
                }
            }

        } catch (Exception e) {
        }
//        btnEnviarActionPerformed(null);


    }//GEN-LAST:event_jtfdCantidadKeyPressed

    private void jtfdCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfdCantidadKeyTyped
        char c = evt.getKeyChar();
        if (c == KeyEvent.VK_COMMA) {
            evt.consume();
        }
//        if (evt.getKeyCode() == KeyEvent.VK_A) {
//            rbnpaquete.isSelected();
//            jtfdCantidad.requestFocus();
//        } else if (evt.getKeyCode() == KeyEvent.VK_E) {
//            rbnunidades.isSelected();
//            jtfdCantidad.requestFocus();
//        }
    }//GEN-LAST:event_jtfdCantidadKeyTyped

    private void jtfdCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfdCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfdCantidadActionPerformed

    private void jtfdBuscarDescripcionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfdBuscarDescripcionFocusGained
        
    }//GEN-LAST:event_jtfdBuscarDescripcionFocusGained

    private void jteListaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jteListaKeyTyped
        if (evt.getKeyCode() == KeyEvent.VK_UP) {
//            JOptionPane.showMessageDialog(rootPane, "weee");
//            jteLista.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
//            jteLista.setModel(dtm);
//
//            jteLista.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
//                public void valueChanged(ListSelectionEvent e) {
//                    int fila = jteLista.getSelectedRow();
//                    JOptionPane.showMessageDialog(null, fila);
//                }
//            });
            int i = jteLista.getSelectedRow();
            jteLista.setRowSelectionInterval(i + 1, i + 1);
        } else if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
//            JOptionPane.showMessageDialog(rootPane, "waaa");
            int i = jteLista.getSelectedRow();
            jteLista.setRowSelectionInterval(i - 1, i - 1);
        } else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int i = jteLista.getSelectedRow();
            cbxMarca.requestFocus();
            jteLista.setRowSelectionInterval(i - 1, i - 1);
//            JOptionPane.showMessageDialog(rootPane, "waaa");
//            int i = jteLista.getSelectedRow();
//            jteLista.setRowSelectionInterval(i - 1, i - 1);
//            jtfdCantidad.grabFocus();
        }
//                try {
//            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
////            JOptionPane.showMessageDialog(rootPane, "waaa");
////            jtfdcosto.setText(jteLista.getValueAt(jteLista.getSelectedRow(), 5).toString());
////                jtfdPrecio.setText(jteLista.getValueAt(jteLista.getSelectedRow(), 6).toString());
////                jtfdPrecio2.setText(jteLista.getValueAt(jteLista.getSelectedRow(), 7).toString());
//            int i = jteLista.getSelectedRow();
//            cbxMarca.requestFocus();
////            jtfdCantidad.grabFocus();
////            jtfdPrecio.setText(jteLista.getValueAt(jteLista.getSelectedRow(), 6).toString());
////            jtfdPrecio2.setText(jteLista.getValueAt(jteLista.getSelectedRow(), 7).toString());
////            if (i!=0) {
////                jtfdnumtipo.grabFocus();
//                jteLista.setRowSelectionInterval(i - 1, i - 1);
////            }else
////            {
////                jteLista.setRowSelectionInterval(i + 1, i + 1);
////                jteLista.setRowSelectionInterval(i - 1, i - 1);
////            }
////            JOptionPane.showMessageDialog(rootPane, i);
//            
//        }
//        } catch (Exception e) {
//        }
    }//GEN-LAST:event_jteListaKeyTyped

    private void jtfdBuscarDescripcionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfdBuscarDescripcionKeyPressed
        
    }//GEN-LAST:event_jtfdBuscarDescripcionKeyPressed

    private void jtfdBuscarDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfdBuscarDescripcionKeyTyped
        if (evt.getKeyCode() == KeyEvent.VK_TAB) {
            cbxMarca.requestFocus();
        }
    }//GEN-LAST:event_jtfdBuscarDescripcionKeyTyped

    private void jteListaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jteListaKeyPressed
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//            JOptionPane.showMessageDialog(rootPane, "waaa");
//            jtfdcosto.setText(jteLista.getValueAt(jteLista.getSelectedRow(), 5).toString());
//                jtfdPrecio.setText(jteLista.getValueAt(jteLista.getSelectedRow(), 6).toString());
//                jtfdPrecio2.setText(jteLista.getValueAt(jteLista.getSelectedRow(), 7).toString());
            int i = jteLista.getSelectedRow();
            cbxMarca.requestFocus();
//            jtfdCantidad.grabFocus();
//            jtfdPrecio.setText(jteLista.getValueAt(jteLista.getSelectedRow(), 6).toString());
//            jtfdPrecio2.setText(jteLista.getValueAt(jteLista.getSelectedRow(), 7).toString());
//            if (i!=0) {
//                jtfdnumtipo.grabFocus();
                jteLista.setRowSelectionInterval(i - 1, i - 1);
//            }else
//            {
//                jteLista.setRowSelectionInterval(i + 1, i + 1);
//                jteLista.setRowSelectionInterval(i - 1, i - 1);
//            }
//            JOptionPane.showMessageDialog(rootPane, i);
            
        }
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_jteListaKeyPressed

    private void jtfdCantidadFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfdCantidadFocusGained
//        try {
//            int i = jteLista.getSelectedRow();
//            jteLista.setRowSelectionInterval(i - 1, i - 1);
//        } catch (Exception e) {
//        }

    }//GEN-LAST:event_jtfdCantidadFocusGained

    private void jtfdBuscarDescripcionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfdBuscarDescripcionKeyReleased
        String cadena= (jtfdBuscarDescripcion.getText()).toUpperCase();
        jtfdBuscarDescripcion.setText(cadena);
        
        VerDatos();
    }//GEN-LAST:event_jtfdBuscarDescripcionKeyReleased

    private void cbxMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxMarcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxMarcaActionPerformed

    private void cbxColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxColorActionPerformed

    private void cbxCaracteristicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCaracteristicaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxCaracteristicaActionPerformed

    private void cbxMarcaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbxMarcaKeyTyped
        
    }//GEN-LAST:event_cbxMarcaKeyTyped

    private void cbxColorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbxColorKeyTyped
        
    }//GEN-LAST:event_cbxColorKeyTyped

    private void cbxCaracteristicaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbxCaracteristicaKeyTyped
       
    }//GEN-LAST:event_cbxCaracteristicaKeyTyped

    private void jbtnAgregar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAgregar1ActionPerformed
        String nueva_marca = JOptionPane.showInputDialog("Ingrese Nueva marca:");
            Marcas m = new Marcas();
            m.setNombre(nueva_marca);
            m.setEstado("1");
            try {
                if (MarcasADN.Evaluar(m)) {
                    JOptionPane.showMessageDialog(rootPane, "Ya existe una marca con el mismo nombre, No se puede registrar la marca");
                    return;
                }
                if(MarcasADN.Guardar(m))
                {
                    JOptionPane.showMessageDialog(rootPane, "Guardado correctamente");
                    CargarMarcas();
                    cbxMarca.requestFocus();
                }
            } catch (SQLException ex) {
                Logger.getLogger(JDBuscarProductos.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(JDBuscarProductos.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jbtnAgregar1ActionPerformed

    private void jbtnAgregar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAgregar2ActionPerformed
        String nueva_marca = JOptionPane.showInputDialog("Ingrese Nuevo color:");
            Colores m = new Colores();
            m.setNombre(nueva_marca);
            m.setEstado("1");
            try {
                if (ColoresADN.Evaluar(m)) {
                    JOptionPane.showMessageDialog(rootPane, "Ya existe un color con el mismo nombre, No se puede registrar el color");
                    return;
                }
                if(ColoresADN.Guardar(m))
                {
                    JOptionPane.showMessageDialog(rootPane, "Guardado correctamente");
                    CargarColores();
                    cbxColor. requestFocus();
                }
            } catch (SQLException ex) {
                Logger.getLogger(JDBuscarProductos.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(JDBuscarProductos.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jbtnAgregar2ActionPerformed

    private void jbtnAgregar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAgregar3ActionPerformed
         String nueva_marca = JOptionPane.showInputDialog("Ingrese Nueva caracter√≠stica:");
            Caracteristicas m = new Caracteristicas();
            m.setNombre(nueva_marca);
            m.setEstado("1");
            try {
                if (CaracteristicasADN.Evaluar(m)) {
                    JOptionPane.showMessageDialog(rootPane, "Ya existe una caracter√≠stica con el mismo nombre, No se puede registrar la caracter√≠stica");
                    return;
                }
                if(CaracteristicasADN.Guardar(m))
                {
                    JOptionPane.showMessageDialog(rootPane, "Guardado correctamente");
                    CargarCaracteristicas();
                    cbxCaracteristica.requestFocus();
                }
            } catch (SQLException ex) {
                Logger.getLogger(JDBuscarProductos.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(JDBuscarProductos.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_jbtnAgregar3ActionPerformed

    private void jtfdBuscarDescripcion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfdBuscarDescripcion1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfdBuscarDescripcion1ActionPerformed

    private void jtfdBuscarDescripcion1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfdBuscarDescripcion1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfdBuscarDescripcion1FocusGained

    private void jtfdBuscarDescripcion1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfdBuscarDescripcion1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfdBuscarDescripcion1KeyPressed

    private void jtfdBuscarDescripcion1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfdBuscarDescripcion1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfdBuscarDescripcion1KeyReleased

    private void jtfdBuscarDescripcion1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfdBuscarDescripcion1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfdBuscarDescripcion1KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;


                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDBuscarProductos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDBuscarProductos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDBuscarProductos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDBuscarProductos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDBuscarProductos dialog = new JDBuscarProductos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnviar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JComboBox cbxCaracteristica;
    private javax.swing.JComboBox cbxColor;
    private javax.swing.JComboBox cbxMarca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnAgregar1;
    private javax.swing.JButton jbtnAgregar2;
    private javax.swing.JButton jbtnAgregar3;
    private javax.swing.JTable jteLista;
    private org.swing.componet.JTextBoxHintDS jtfdBuscarDescripcion;
    private org.swing.componet.JTextBoxHintDS jtfdBuscarDescripcion1;
    private org.swing.componet.JTextBoxHintDS jtfdCantidad;
    // End of variables declaration//GEN-END:variables

    private void VerDatos() {
        try {
            int filas = jteLista.getRowCount();
            for (int i = 0; i < filas; i++) {
                dtm.removeRow(0);
            }
            Productos c = new Productos();
            c.setCodbarra("");
            c.setEstado(String.valueOf(estado));
//            if (rbnmarca.isSelected()) {
//                c.setCategoriasx(new Categorias(0, ""));
//                c.setDescripcion("");
//                c.setMarca(new Marcas(jtfdBuscarDescripcion.getText().trim()));
//                for (Productos la : ProductosADN.ListaProductos_Cat(c)) {
//                    dtm.addRow(la.ArregloDatos());
//                }
//            } else if (rbndescripcion.isSelected()) {
                c.setCategoriasx(new Categorias(0, ""));
                c.setDescripcion(jtfdBuscarDescripcion.getText().trim());
                c.setMarca(new Marcas(""));
                for (Productos la : ProductosADN.ListaProductos_Cat(c)) {
                    dtm.addRow(la.ArregloDatos());
                }
//            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
    }
}
