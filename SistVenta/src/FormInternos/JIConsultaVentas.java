/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package FormInternos;
import Adicional.AutoCompletion;
import Adicional.Util;
import com.itextpdf.text.Document;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Font;
import com.itextpdf.text.pdf.PdfPTable;
import accesodatos.*;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfPCell;
import entidades.*;
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.URL;
import java.sql.Date;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author EDWARD
 */
public class JIConsultaVentas extends javax.swing.JInternalFrame {

    /**
     * Creates new form JIConsultaVentas
     */
    public JIConsultaVentas() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    DefaultTableModel dtm = null;
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnmostrar = new javax.swing.JButton();
        btnimprimir = new javax.swing.JButton();
        jdprFecInicial = new com.michaelbaranov.microba.calendar.DatePicker();
        jdprFecFinal = new com.michaelbaranov.microba.calendar.DatePicker();
        cbxServicios1 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        cbxClientes = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tbxnroventas = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tbxtotal = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Consulta de ventas");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Filtro"));

        jLabel7.setText("Fecha inicial:");

        jLabel8.setText("Fecha final:");

        btnmostrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/show.png"))); // NOI18N
        btnmostrar.setText("Mostrar");
        btnmostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmostrarActionPerformed(evt);
            }
        });

        btnimprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagen/Print2.png"))); // NOI18N
        btnimprimir.setText("Imprimir");
        btnimprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnimprimirActionPerformed(evt);
            }
        });

        cbxServicios1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TODOS", "ENTREGADAS", "POR ENTREGAR" }));
        cbxServicios1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cbxServicios1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxServicios1ActionPerformed(evt);
            }
        });

        jLabel9.setText("Estado:");

        cbxClientes.setEditable(true);
        cbxClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxClientesActionPerformed(evt);
            }
        });

        jLabel2.setText("Cliente:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jdprFecInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jdprFecFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(49, 49, 49)
                        .addComponent(jLabel8)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbxServicios1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cbxClientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnmostrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnimprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnmostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnimprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(jLabel9)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jdprFecInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdprFecFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbxServicios1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbxClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Nro", "Tipo pago", "Tipo servicio", "Cliente", "Fecha", "Estado", "Descuento", "Importe total"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Nro de ventas:");

        jLabel3.setText("Total ventas:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 796, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tbxnroventas, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tbxtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tbxnroventas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tbxtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CargarClientes() throws SQLException
    {
        cbxClientes.removeAllItems();
        Clientes ts = new Clientes();
        ts.setDni("");
        ts.setNombres("");
        ts.setEstado("1");
        try {
            cbxClientes.addItem("Todos");
            for (Clientes ts2 : ClientesADN.Lista(ts)) {
                cbxClientes.addItem(ts2.getNombres());
                System.out.println("waaa");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JIVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        dtm = (DefaultTableModel) jTable1.getModel();
        Util.ModificarTamañoJtable(jTable1,3,260);
        Util.AlinearDerecha(jTable1, 6);
        Util.AlinearDerecha(jTable1, 7);
        try {
            CargarClientes();
        } catch (SQLException ex) {
            Logger.getLogger(JIConsultaVentas.class.getName()).log(Level.SEVERE, null, ex);
        }
        AutoCompletion.enable(cbxClientes);
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnmostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmostrarActionPerformed
        try {
            VerDatos();
            int nrofilas=0;
            float totalventas=0;
            int filas=jTable1.getRowCount();
            if (filas>0) {
                for (int i = 0; i < filas; i++) {
                nrofilas+=1;
                tbxnroventas.setText(String.valueOf(nrofilas));
                totalventas+=Float.parseFloat(dtm.getValueAt(i, 7).toString());
                tbxtotal.setText(String.valueOf(totalventas));
            }
            }else {
                totalventas = 0;
                nrofilas = 0;
                tbxnroventas.setText(String.valueOf(nrofilas));
                tbxtotal.setText(String.valueOf(totalventas));
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
    }//GEN-LAST:event_btnmostrarActionPerformed

    private void btnimprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnimprimirActionPerformed
        JasperReport reporte = null;
        String est = "1";
        if (cbxServicios1.getSelectedIndex() == 0) {
            est = "t";
        } else if (cbxServicios1.getSelectedIndex() == 1) {
            est = "1";
        } else {
            est = "p";
        }
//        try {
//            String ubicacion = "src/reportes/rptConsultaVentas.jasper";
//            reporte = (JasperReport)JRLoader.loadObject(ubicacion);
////            URL  in = this.getClass().getResource("/reportes/rptConsultaVentas.jasper");
////            System.out.println("asd: "+in.getPath());
////            reporte = (JasperReport) JRLoader.loadObjectFromFile(in.getPath() );
//            Map parametros;
//            parametros= new HashMap<String,Object>();
//            parametros.put("p_fechaini", jdprFecInicial.getDate());
//            parametros.put("p_fechafin", jdprFecFinal.getDate());
//            parametros.put("p_estado", est);
//            JasperPrint print = JasperFillManager.fillReport(reporte, parametros);
//            JasperViewer visor = new JasperViewer(print);
//            visor.setTitle("Consulta de ventas");
//            visor.setVisible(true);
//        } catch (JRException ex) {
//            Logger.getLogger(JIConsultaVentas.class.getName()).log(Level.SEVERE, null, ex);
//        }
        Imprimir();
//        try {
//            Imprimir2();
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(JIConsultaVentas.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (DocumentException ex) {
//            Logger.getLogger(JIConsultaVentas.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (IOException ex) {
//            Logger.getLogger(JIConsultaVentas.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex) {
//            Logger.getLogger(JIConsultaVentas.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(JIConsultaVentas.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_btnimprimirActionPerformed

    private void cbxServicios1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxServicios1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxServicios1ActionPerformed

    private void cbxClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxClientesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxClientesActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnimprimir;
    private javax.swing.JButton btnmostrar;
    private javax.swing.JComboBox cbxClientes;
    private javax.swing.JComboBox cbxServicios1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private com.michaelbaranov.microba.calendar.DatePicker jdprFecFinal;
    private com.michaelbaranov.microba.calendar.DatePicker jdprFecInicial;
    private javax.swing.JTextField tbxnroventas;
    private javax.swing.JTextField tbxtotal;
    // End of variables declaration//GEN-END:variables

    private void VerDatos() throws SQLException, ClassNotFoundException {
        try {
            int filas = jTable1.getRowCount();
            for (int i = 0; i < filas; i++) {
                dtm.removeRow(0);
            }
            String fec1 = Formatos.sdfFecha.format(jdprFecInicial.getDate());
            String fec2 = Formatos.sdfFecha.format(jdprFecFinal.getDate());
            Clientes c = new Clientes();
            c.setNombres(cbxClientes.getSelectedItem().toString());
            //int idcliente = ClientesADN.CapturaIDCliente(c);
            Date fechasql1 = Formatos.FechaSQL(fec1);
            Date fechasql2 = Formatos.FechaSQL(fec2);
            String est="1";
            if (cbxServicios1.getSelectedIndex()==0) {
                est = "t";
            }else if(cbxServicios1.getSelectedIndex()==1)
            {
                est = "1";
            }else
            {
                est="p";
            }
//            if (rbnestado.isSelected()) {
//                est="0";
//            }else
//            {
//                est="1";
//            }
            
            for (ConsultaVentas la : VentasADN.ConsultaVentas(fechasql1,fechasql2,est,
                                                            cbxClientes.getSelectedIndex()==0?"%":cbxClientes.getSelectedItem().toString())) {
                dtm.addRow(la.ArregloDatos());
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.toString());
        }
    }
    void Imprimir() {
        try {
            //creamos un documento
            Document doc = new Document(PageSize.A4, 30f, 20f, 50f, 20f);
            OutputStream archivo = new FileOutputStream("Reporte_ventas.pdf");
            PdfWriter.getInstance(doc, archivo);

            //abrimos el archivo
            doc.open();
            Paragraph encabezado = new Paragraph("Reporte de ventas", FontFactory.getFont("arial", 24, Font.BOLD));
            encabezado.setAlignment(encabezado.ALIGN_CENTER);
            Paragraph separacion = new Paragraph("\n");
            Paragraph fecha1 = new Paragraph("Del: " + Formatos.sdfFecha.format(jdprFecInicial.getDate())+"   "+"Al: " + Formatos.sdfFecha.format(jdprFecInicial.getDate()));
            Paragraph estado = new Paragraph("Estado: " +cbxServicios1.getSelectedItem().toString());
            fecha1.setAlignment(fecha1.ALIGN_CENTER);
            estado.setAlignment(fecha1.ALIGN_CENTER);
//            Paragraph fecha2 = new Paragraph();
            Paragraph linea=new Paragraph("-------------------------------------------------------------------------------------------------------------------------------------");
            
            BaseFont tipo = BaseFont.createFont(BaseFont.HELVETICA, BaseFont.CP1252, false);
            Font fuente = new Font(tipo, 13, Font.BOLD, BaseColor.BLUE);
            Paragraph totales= new Paragraph("Nro ventas: "+tbxnroventas.getText()+"                                                                                                          "+"Total: "+tbxtotal.getText(),fuente);
            
            //creamos la tabla para las filas del jtable
            PdfPTable tabla = new PdfPTable(9);
            tabla.getDefaultCell().setBorder(1);
            tabla.getDefaultCell().setBackgroundColor(BaseColor.LIGHT_GRAY);
            int[] ancho = new int[]{50,80, 100, 120, 200,100,100,60,80};
            tabla.setWidths(ancho);
            tabla.setSpacingBefore(50);
            tabla.setWidthPercentage(100);
            tabla.addCell("Nro");
            tabla.addCell("Numero");
            tabla.addCell("Tipo pago");
            tabla.addCell("Tipo servicio");
            tabla.addCell("Cliente");
            tabla.addCell("Fecha de venta");
            tabla.addCell("Estado");
            tabla.addCell("Desc.");
            tabla.addCell("Total");
            PdfPTable tabla2 = new PdfPTable(9);
            tabla2.getDefaultCell().setBorder(0);
            int[] ancho2 = new int[]{50,80, 100, 120, 200,100,100,60,80};
            
            tabla2.setWidths(ancho2);
            tabla2.setWidthPercentage(100);
            
            int filas = jTable1.getRowCount();
            for (int i = 0; i < filas; i++) {
                PdfPCell cell = new PdfPCell(new Phrase(String.valueOf(i+1), new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.BOLD, BaseColor.BLACK)));
                cell.setBorderWidthBottom(1);
                tabla.addCell(cell);
                
                cell = new PdfPCell(new Phrase(dtm.getValueAt(i, 0).toString(), new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.BOLD, BaseColor.BLACK)));
                cell.setBorderWidthBottom(1);
                tabla.addCell(cell);
                
                cell = new PdfPCell(new Phrase(dtm.getValueAt(i,1).toString(), new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.BOLD, BaseColor.BLACK)));
                cell.setBorderWidthBottom(1);
                tabla.addCell(cell);
                
                cell = new PdfPCell(new Phrase(dtm.getValueAt(i, 2).toString(), new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.BOLD, BaseColor.BLACK)));
                cell.setBorderWidthBottom(1);
                tabla.addCell(cell);
                
                cell = new PdfPCell(new Phrase(dtm.getValueAt(i, 3).toString(), new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.BOLD, BaseColor.BLACK)));
                cell.setBorderWidthBottom(1);
                tabla.addCell(cell);
                
                cell = new PdfPCell(new Phrase(dtm.getValueAt(i, 4).toString(), new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.BOLD, BaseColor.BLACK)));
                cell.setBorderWidthBottom(1);
                tabla.addCell(cell);
                
                cell = new PdfPCell(new Phrase(dtm.getValueAt(i, 5).toString(), new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.BOLD, BaseColor.BLACK)));
                cell.setBorderWidthBottom(1);
                tabla.addCell(cell);
                
                cell = new PdfPCell(new Phrase(dtm.getValueAt(i, 6).toString(), new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.BOLD, BaseColor.BLACK)));
                cell.setBorderWidthBottom(1);
                cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
                tabla.addCell(cell);
                
                cell = new PdfPCell(new Phrase(dtm.getValueAt(i, 7).toString(), new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.BOLD, BaseColor.BLACK)));
                cell.setBorderWidthBottom(1);
                cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
                tabla.addCell(cell);
                
//                tabla2.addCell(dtm.getValueAt(i, 0).toString());
//                tabla2.addCell(dtm.getValueAt(i, 1).toString());
//                tabla2.addCell(dtm.getValueAt(i, 2).toString());
//                tabla2.addCell(dtm.getValueAt(i, 3).toString());
//                tabla2.addCell(dtm.getValueAt(i, 4).toString());
//                tabla2.addCell(dtm.getValueAt(i, 5).toString());
            }
            //le añadimos los elementos al documento
            doc.add(encabezado);
            doc.add(fecha1);
            doc.add(estado);
            doc.add(tabla);
            doc.add(tabla2);
            doc.add(linea);
            doc.add(totales);
            doc.close();
            archivo.close();

            //abrir el documento
            File arch = new File("Reporte_ventas.pdf");
            Desktop.getDesktop().open(arch);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Error al imprimir reporte");
        }
    }
    void Imprimir2() throws FileNotFoundException, DocumentException, IOException, SQLException, ClassNotFoundException {
//        try {
            //creamos un documento
            Document doc = new Document(PageSize.A4, 30f, 20f, 50f, 20f);
            OutputStream archivo = new FileOutputStream("Reporte_ventas.pdf");
            PdfWriter.getInstance(doc, archivo);

            //abrimos el archivo
            doc.open();
            Paragraph encabezado = new Paragraph("Reporte de ventas2", FontFactory.getFont("arial", 24, Font.BOLD));
            encabezado.setAlignment(encabezado.ALIGN_CENTER);
            Paragraph separacion = new Paragraph("\n");
            Paragraph fecha1 = new Paragraph("Del: " + Formatos.sdfFecha.format(jdprFecInicial.getDate()) + "   " + "Al: " + Formatos.sdfFecha.format(jdprFecInicial.getDate()));
            fecha1.setAlignment(fecha1.ALIGN_CENTER);
//            Paragraph fecha2 = new Paragraph();
            Paragraph linea = new Paragraph("-------------------------------------------------------------------------------------------------------------------------------------");

            BaseFont tipo = BaseFont.createFont(BaseFont.HELVETICA, BaseFont.CP1252, false);
            Font fuente = new Font(tipo, 13, Font.BOLD, BaseColor.BLUE);
            Paragraph totales = new Paragraph("Nro ventas: " + tbxnroventas.getText() + "                                                                                                   " + "Total: " + tbxtotal.getText(), fuente);

            //creamos la tabla para las filas del jtable
            PdfPTable tabla = new PdfPTable(8);
            tabla.getDefaultCell().setBorder(0);
            tabla.getDefaultCell().setBackgroundColor(BaseColor.LIGHT_GRAY);
            int[] ancho = new int[]{50, 50, 50, 90, 200, 50, 50, 100};
            tabla.setWidths(ancho);
            //tabla.setSpacingBefore(50);
            tabla.setWidthPercentage(100);
            PdfPCell cell = new PdfPCell(new Phrase("Nro", new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.BOLD, BaseColor.BLACK)));
            cell.setBorderWidthBottom(1);
            cell.setBackgroundColor(BaseColor.GRAY);
            tabla.addCell(cell);

            cell = new PdfPCell(new Phrase("Serie", new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.BOLD, BaseColor.BLACK)));
            cell.setBorderWidthBottom(1);
            cell.setBackgroundColor(BaseColor.GRAY);
            tabla.addCell(cell);

            cell = new PdfPCell(new Phrase("Numero", new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.BOLD, BaseColor.BLACK)));
            cell.setBorderWidthBottom(1);
            cell.setBackgroundColor(BaseColor.GRAY);
            tabla.addCell(cell);

            cell = new PdfPCell(new Phrase("Tipo", new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.BOLD, BaseColor.BLACK)));
            cell.setBorderWidthBottom(1);
            cell.setBackgroundColor(BaseColor.GRAY);
            tabla.addCell(cell);
            
            cell = new PdfPCell(new Phrase("Cliente", new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.BOLD, BaseColor.BLACK)));
            cell.setBorderWidthBottom(1);
            cell.setBackgroundColor(BaseColor.GRAY);
            tabla.addCell(cell);

            PdfPCell cell0 = new PdfPCell(new Phrase("Fecha de venta", new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.BOLD, BaseColor.BLACK)));
            cell0.setBorderWidthBottom(1);
            cell0.setBackgroundColor(BaseColor.GRAY);

            cell0.setColspan(2);

            tabla.addCell(cell0);

            cell = new PdfPCell(new Phrase("Importe total", new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.BOLD, BaseColor.BLACK)));
            cell.setBorderWidthBottom(1);
            cell.setBackgroundColor(BaseColor.GRAY);

            tabla.addCell(cell);


            PdfPTable tabla2 = new PdfPTable(8);
            tabla2.getDefaultCell().setBorder(0);
            int[] ancho2 = new int[]{50, 50, 50, 90, 200, 50, 50, 100};

            tabla2.setWidths(ancho2);
            tabla2.setWidthPercentage(100);

            int filas = jTable1.getRowCount();
            int idventa = 0;
            for (int i = 0; i < filas; i++) {
                idventa = Integer.parseInt(dtm.getValueAt(i, 0).toString());

                PdfPCell cellx = new PdfPCell(new Phrase(String.valueOf(i + 1), new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));
                cellx.setBorder(0);
                tabla2.addCell(cellx);

                cellx = new PdfPCell(new Phrase(dtm.getValueAt(i, 0).toString(), new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));
                cellx.setBorder(0);
                tabla2.addCell(cellx);

                cellx = new PdfPCell(new Phrase(dtm.getValueAt(i, 1).toString(), new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));
                cellx.setBorder(0);
                tabla2.addCell(cellx);

                cellx = new PdfPCell(new Phrase(dtm.getValueAt(i, 2).toString(), new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));
                cellx.setBorder(0);
                tabla2.addCell(cellx);
                
                cellx = new PdfPCell(new Phrase(dtm.getValueAt(i, 3).toString(), new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));
                cellx.setBorder(0);
                tabla2.addCell(cellx);

                cellx = new PdfPCell(new Phrase(dtm.getValueAt(i, 4).toString(), new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));
                cellx.setColspan(2);
                cellx.setBorder(0);
                tabla2.addCell(cellx);

                cellx = new PdfPCell(new Phrase(dtm.getValueAt(i, 6).toString(), new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));

                cellx.setBorder(0);
                cellx.setHorizontalAlignment(Element.ALIGN_RIGHT);
                tabla2.addCell(cellx);

                //tabla2.addCell(dtm.getValueAt(i, 5).toString());

                PdfPCell cell1 = new PdfPCell(new Phrase("", new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));
                PdfPCell cell2 = new PdfPCell(new Phrase("", new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));
                PdfPCell cell3 = new PdfPCell(new Phrase("Nro", new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));
                //PdfPCell cell4 = new PdfPCell(new Phrase("Codigo", new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));
                PdfPCell cell5 = new PdfPCell(new Phrase("Producto", new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));
                PdfPCell cell6 = new PdfPCell(new Phrase("Cantidad", new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));
                PdfPCell cell7 = new PdfPCell(new Phrase("Precio", new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));
                PdfPCell cell8 = new PdfPCell(new Phrase("Importe", new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));

                cell1.setBorderWidthBottom(0);
                cell1.setBorderWidthTop(0);
                cell1.setBorderWidthLeft(0);
                cell1.setBorderWidthRight(0);

                cell2.setBorderWidthBottom(1);
                cell3.setBorderWidthBottom(1);
//                cell4.setBorderWidthBottom(1);
                cell5.setBorderWidthBottom(1);
                cell6.setBorderWidthBottom(1);
                cell7.setBorderWidthBottom(1);
                cell8.setBorderWidthBottom(1);

                cell2.setBackgroundColor(BaseColor.LIGHT_GRAY);
                cell3.setBackgroundColor(BaseColor.LIGHT_GRAY);
//                cell4.setBackgroundColor(BaseColor.LIGHT_GRAY);
                cell5.setBackgroundColor(BaseColor.LIGHT_GRAY);
                cell6.setBackgroundColor(BaseColor.LIGHT_GRAY);
                cell7.setBackgroundColor(BaseColor.LIGHT_GRAY);
                cell8.setBackgroundColor(BaseColor.LIGHT_GRAY);

                tabla2.addCell(cell1);
                tabla2.addCell(cell2);
                tabla2.addCell(cell3);
//                tabla2.addCell(cell4);
                tabla2.addCell(cell5);
                tabla2.addCell(cell6);
                tabla2.addCell(cell7);
                tabla2.addCell(cell8);
                int o = 0;
                
                for (ProductoDetalle j : VentasADN.DetalleVenta(idventa)) {
                    tabla2.addCell("");
                    tabla2.addCell("");
                    o++;
                    PdfPCell celld_0  = new PdfPCell(new Phrase(String.valueOf(o), new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));
                    celld_0.setBorderWidth(0);
                    
//                    PdfPCell  celld_0_1  = new PdfPCell(new Phrase("--", new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));
//                    celld_0_1.setBorderWidth(0);
                    
                    PdfPCell celld_1  = new PdfPCell(new Phrase(j.getDescripcion(), new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));
                    celld_1.setBorderWidth(0);
                    
                    PdfPCell celld_2  = new PdfPCell(new Phrase(Formatos.df.format(j.getCantidad()) , new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));
                    celld_2.setHorizontalAlignment(com.itextpdf.text.Element.ALIGN_RIGHT);
                    celld_2.setBorderWidth(0);
                    
                    PdfPCell celld_3  = new PdfPCell(new Phrase(Formatos.df.format(j.getPrecio()) , new com.itextpdf.text.Font(tipo, 8, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));
                    celld_3.setHorizontalAlignment(com.itextpdf.text.Element.ALIGN_RIGHT);
                    celld_3.setBorderWidth(0);
                    
                    PdfPCell celld_4 = new PdfPCell(new Phrase(Formatos.df.format(j.getImporte()), new com.itextpdf.text.Font(tipo, 9, com.itextpdf.text.Font.NORMAL, BaseColor.BLACK)));
                    celld_4.setHorizontalAlignment(com.itextpdf.text.Element.ALIGN_RIGHT);
                    celld_4.setBorderWidth(0);
                    
                    //celld_1.setColspan(2);
                    tabla2.addCell( celld_0);
                                        
//                    tabla2.addCell( celld_0_1);
                    tabla2.addCell( celld_1);
                    tabla2.addCell( celld_2);
                    tabla2.addCell( celld_3);
                    tabla2.addCell( celld_4);
                }
                
                
                tabla2.addCell(" ");
                tabla2.addCell(" ");
                tabla2.addCell(" ");
                tabla2.addCell(" ");
                tabla2.addCell(" ");
                tabla2.addCell(" ");
                tabla2.addCell(" ");
                tabla2.addCell(" ");
            }

            //le añadimos los elementos al documento
            doc.add(encabezado);

            doc.add(fecha1);
            doc.add(separacion);
            doc.add(tabla);
            doc.add(tabla2);
            doc.add(linea);
            doc.add(totales);
            doc.close();
            archivo.close();

            //abrir el documento
            File arch = new File("Reporte_ventas.pdf");
            Desktop.getDesktop().open(arch);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(rootPane, "Error al imprimir reporte: "+e.getMessage());
//        }
    }
}
